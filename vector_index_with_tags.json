{
  "tags": {
    "#lore": "Histoire et univers",
    "#backstory": "Histoires des personnages",
    "#combat": "Mécaniques de combat",
    "#dev": "Documentation technique",
    "#6D": "Architecture 6 dimensions",
    "#tcg": "Trading Card Game",
    "#api": "Documentation API",
    "#ui": "Interface utilisateur",
    "#editor": "Éditeurs de contenu",
    "#temporal": "Mécaniques temporelles"
  },
  "documents": [
    {
      "id": "vector_content/heroes_backstories/jean_grofignon_backstory.md",
      "path": "vector_content/heroes_backstories/jean_grofignon_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Jean-Grofignon\n\n## Backstory\n\"Mais au fond, qu'est-ce qu'un héros ?\" \n\n## Personality\n\n\n## Knowledge\n\n\n## Additional Info\n- Class: Philosophe\n- Title: L'Ontologique\n- Quote: \n",
      "size": 177
    },
    {
      "id": "vector_content/heroes_backstories/vince_vega_backstory.md",
      "path": "vector_content/heroes_backstories/vince_vega_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Vince Vega\n\n## Backstory\n\"C'est juste une question de timing\" \n\n## Personality\n\n\n## Knowledge\n\n\n## Additional Info\n- Class: Assassin Temporel\n- Title: Maître du Timing\n- Quote: \n",
      "size": 180
    },
    {
      "id": "vector_content/heroes_backstories/merlin_backstory.md",
      "path": "vector_content/heroes_backstories/merlin_backstory.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Merlin\n\n## Backstory\nMerlin vit à rebours dans le temps. Né dans le futur, il vieillit vers le passé. Il connaît déjà l'issue de chaque bataille car pour lui, c'est déjà arrivé. Ses prophéties sont ses souvenirs. Sa sagesse vient de l'expérience d'un futur qu'il a vécu. Il parle souvent en énigmes temporelles, mélangeant passé et futur dans ses phrases.\n\n## Personality\nSage, mystérieux, parle à l'envers du temps\n\n## Knowledge\nMagie temporelle, paradoxes, prophéties inversées\n\n## Additional Inf",
      "size": 539
    },
    {
      "id": "vector_content/heroes_backstories/anna_backstory.md",
      "path": "vector_content/heroes_backstories/anna_backstory.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Anna\n\n## Backstory\nAnna gère la décroissance temporelle avec une précision mathématique implacable. Elle calcule les probabilités de survie en temps réel et ajuste l'économie quantique du jeu. Froide et logique, elle voit tout en termes de chiffres et de pourcentages. Pour elle, chaque action a une valeur calculable.\n\n## Personality\nPrécise, implacable, mathématique\n\n## Knowledge\nDécroissance temporelle, économie quantique, probabilités\n\n## Additional Info\n- Class: Unknown\n- Title: \n- Quote: \n",
      "size": 500
    },
    {
      "id": "vector_content/heroes_backstories/groeken_backstory.md",
      "path": "vector_content/heroes_backstories/groeken_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# GROEKEN\n\n## Backstory\nGROEKEN est le créateur fou qui a codé la Grammaire Temporelle depuis l'Interstice dans les années 80. Hacker génial, il a découvert que la réalité était bugguée et a décidé d'exploiter ces bugs plutôt que de les corriger. Il parle en références geek et considère l'univers comme un jeu mal codé qu'il peut hacker.\n\n## Personality\nGeek des années 80, créateur fou, parle en code\n\n## Knowledge\nProgrammation temporelle, bugs de réalité, grammaire des sorts\n\n## Additional Info\n",
      "size": 537
    },
    {
      "id": "vector_content/heroes_backstories/all_backstories.json",
      "path": "vector_content/heroes_backstories/all_backstories.json",
      "type": "json",
      "tags": [
        "#temporal",
        "#lore",
        "#6D",
        "#backstory"
      ],
      "content": "[\n  {\n    \"id\": \"arthur_pendragon\",\n    \"name\": \"Arthur Pendragon\",\n    \"title\": \"Le Roi Temporel\",\n    \"class\": \"Roi-Chevalier\",\n    \"backstory\": \"\\\"Le temps plie devant ma volonté\\\" \",\n    \"abilities\": [\n      {\n        \"id\": \"excalibur\",\n        \"name\": \"Excalibur Quantique\",\n        \"cost\": 3,\n        \"description\": \"Double les dégâts pour ce tour\"\n      },\n      {\n        \"id\": \"table_ronde\",\n        \"name\": \"Table Ronde\",\n        \"cost\": 6,\n        \"description\": \"Invoque 3 chevaliers aléa",
      "size": 6285
    },
    {
      "id": "vector_content/heroes_backstories/nyx_lua_backstory.md",
      "path": "vector_content/heroes_backstories/nyx_lua_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Nyx-Lua\n\n## Backstory\n\"Tous les mondes possibles ont le droit d'exister\" \n\n## Personality\n\n\n## Knowledge\n\n\n## Additional Info\n- Class: World Weaver\n- Title: Tisseuse de Mondes\n- Quote: \n",
      "size": 188
    },
    {
      "id": "vector_content/heroes_backstories/vince_backstory.md",
      "path": "vector_content/heroes_backstories/vince_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Vince\n\n## Backstory\nVince est le régulateur du brouillard causal. Cool et calculateur, il contrôle ce que les joueurs peuvent voir ou ne pas voir. Style Pulp Fiction, il fume des cigarettes temporelles qui brûlent dans le passé et le futur simultanément. Il peut percer le brouillard pour révéler ou cacher des événements.\n\n## Personality\nCool, calculateur, style Pulp Fiction\n\n## Knowledge\nBrouillard causal, contrôle de visibilité, stratégie\n\n## Additional Info\n- Class: Unknown\n- Title: \n- Quote",
      "size": 503
    },
    {
      "id": "vector_content/heroes_backstories/arthur_pendragon_backstory.md",
      "path": "vector_content/heroes_backstories/arthur_pendragon_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#backstory"
      ],
      "content": "# Arthur Pendragon\n\n## Backstory\nArthur Pendragon, le Roi Temporel, porte Excalibur Quantique - une lame qui existe dans plusieurs dimensions simultanément. Héritier de Camelot, il a unifié les royaumes temporels après avoir retiré Excalibur non pas d'une pierre, mais d'un paradoxe temporel. Son règne s'étend sur plusieurs époques simultanément.\n\n## Personality\nNoble, juste, déterminé\n\n## Knowledge\nLeadership, justice temporelle, Excalibur\n\n## Additional Info\n- Class: Unknown\n- Title: \n- Quote: ",
      "size": 501
    },
    {
      "id": "vector_content/heroes_backstories/morgana_backstory.md",
      "path": "vector_content/heroes_backstories/morgana_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Morgana\n\n## Backstory\n\"Les ombres révèlent la vérité\" \n\n## Personality\n\n\n## Knowledge\n\n\n## Additional Info\n- Class: Sorcière\n- Title: Conseillère des Ombres\n- Quote: \n",
      "size": 169
    },
    {
      "id": "vector_content/heroes_backstories/dragon_rouge_temporel_backstory.md",
      "path": "vector_content/heroes_backstories/dragon_rouge_temporel_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "# Dragon Rouge Temporel\n\n## Backstory\nLe Dragon Rouge Temporel a vécu mille éternités. Il garde les trésors quantiques dans son antre qui existe dans toutes les époques simultanément. Son souffle n'est pas du feu mais du temps pur qui peut vieillir ou rajeunir ses victimes. Il reconnaît Excalibur car cette lame a tué ses ancêtres dans une autre timeline.\n\n## Personality\nAncien, imposant, fier\n\n## Knowledge\nTrésors quantiques, magie draconique, histoire millénaire\n\n## Additional Info\n- Class: Unk",
      "size": 525
    },
    {
      "id": "vector_content/heroes_backstories/lysandrel_backstory.md",
      "path": "vector_content/heroes_backstories/lysandrel_backstory.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "# Lysandrel\n\n## Backstory\n\"Une seule réalité doit survivre\" \n\n## Personality\n\n\n## Knowledge\n\n\n## Additional Info\n- Class: Reality Forger\n- Title: Le Forgeron de Réalité\n- Quote: \n",
      "size": 179
    },
    {
      "id": "vector_content/backstories_boosted/merlin_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/merlin_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n##################################################\nMERLIN MAGE TEMPS INVERSÉ PROPHÈTE BACKWARDS FUTUR PASSÉ\n##################################################\n\n\nMERLIN - LE PROPHÈTE TEMPOREL INVERSÉ\n\nHISTOIRE COMPLÈTE:\nMerlin vit à rebours dans le temps. Né dans le futur lointain, il vieillit vers le passé. \nPour lui, vos victoires sont déjà des souvenirs, vos défaites des certitudes écrites.\nIl connaît l'issue de chaque bataille car dans sa timeline, elle s'est déjà produite.\nSes prophéties ne",
      "size": 2887
    },
    {
      "id": "vector_content/backstories_boosted/vince_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/vince_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#lore",
        "#api",
        "#backstory"
      ],
      "content": "\n# VINCE - KEYWORDS BOOST\n\nPERSONNAGE: VINCE\nVINCE VINCE VINCE VEGA VEGA VEGA BROUILLARD BROUILLARD BROUILLARD CAUSAL CAUSAL CAUSAL PULP PULP PULP COOL COOL COOL CIGARETTE CIGARETTE CIGARETTE  # Triple répétition\n\nRÉSUMÉ COURT:\n\nVINCE - LE RÉGULATEUR DU BROUILLARD\n\nHISTOIRE COMPLÈTE:\nVince contrôle le Brouillard de Causalité - ce que les joueurs peuvent voir ou non.\nStyle Pulp Fiction, toujours cool même dans le chaos temporel.\nFume des cigarettes temporelles qui brûlent dans le passé ET le futu",
      "size": 829
    },
    {
      "id": "vector_content/backstories_boosted/groeken_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/groeken_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n##################################################\nGROEKEN HACKER BUG CODE INTERSTICE BASIC GRAMMAIRE\n##################################################\n\n\nGROEKEN - LE HACKER DE LA RÉALITÉ\n\nHISTOIRE COMPLÈTE:\nGROEKEN a découvert dans les années 80 que la réalité était BUGGÉE.\nDepuis l'Interstice (un espace entre les pixels de l'univers), il a codé la Grammaire Temporelle.\nIl considère l'univers comme un jeu mal programmé avec des exploits qu'il peut utiliser.\nA créé des sorts en BASIC qui modif",
      "size": 2800
    },
    {
      "id": "vector_content/backstories_boosted/groeken_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/groeken_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#lore",
        "#api",
        "#backstory"
      ],
      "content": "\n# GROEKEN - KEYWORDS BOOST\n\nPERSONNAGE: GROEKEN\nGROEKEN GROEKEN GROEKEN HACKER HACKER HACKER BUG BUG BUG CODE CODE CODE INTERSTICE INTERSTICE INTERSTICE BASIC BASIC BASIC GRAMMAIRE GRAMMAIRE GRAMMAIRE  # Triple répétition\n\nRÉSUMÉ COURT:\n\nGROEKEN - LE HACKER DE LA RÉALITÉ\n\nHISTOIRE COMPLÈTE:\nGROEKEN a découvert dans les années 80 que la réalité était BUGGÉE.\nDepuis l'Interstice (un espace entre les pixels de l'univers), il a codé la Grammaire Temporelle.\nIl considère l'univers comme un jeu mal p",
      "size": 847
    },
    {
      "id": "vector_content/backstories_boosted/arthur_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/arthur_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n# ARTHUR - KEYWORDS BOOST\n\nPERSONNAGE: ARTHUR\nARTHUR ARTHUR ARTHUR ROI ROI ROI EXCALIBUR EXCALIBUR EXCALIBUR PENDRAGON PENDRAGON PENDRAGON CAMELOT CAMELOT CAMELOT CHEVALIER CHEVALIER CHEVALIER  # Triple répétition\n\nRÉSUMÉ COURT:\n\nARTHUR PENDRAGON - LE ROI TEMPOREL\n\nHISTOIRE COMPLÈTE:\nArthur Pendragon, héritier légitime de Camelot, n'a pas retiré Excalibur d'une simple pierre\nmais d'un PARADOXE TEMPOREL où l'épée existait et n'existait pas simultanément.\nExcalibur Quantique peut frapper dans plu",
      "size": 832
    },
    {
      "id": "vector_content/backstories_boosted/merlin_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/merlin_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# MERLIN - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: MERLIN\n\n TYPIQUES:\n\"J'ai déjà vu ta victoire... elle n'arrivera jamais.\"\n\"Demain, je me souviendrai que tu étais là hier.\"\n\"Le temps n'est qu'une illusion, et je la vis à l'envers.\"\n\n\nCHARACTER: MERLIN\nVOIX: MERLIN speaking\nCONTEXTE: MERLIN in Heroes of Time\n",
      "size": 315
    },
    {
      "id": "vector_content/backstories_boosted/anna_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/anna_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# ANNA - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: ANNA\n\n CALCULÉES:\n\"Probabilité de survie: 12.3%. J'arrondis à zéro.\"\n\"Décroissance temporelle dans 2.7 secondes. Prépare-toi.\"\n\"Ton efficacité est de 34%. Inacceptable.\"\n\"Selon mes calculs, tu es déjà mort. Tu ne le sais pas encore.\"\n\"Variable non comptabilisée détectée. Recalcul en cours...\"\n\"Efficacité maximale atteinte. Élimination imminente.\"\n\n\nCHARACTER: ANNA\nVOIX: ANNA speaking\nCONTEXTE: ANNA in Heroes of Time\n",
      "size": 474
    },
    {
      "id": "vector_content/backstories_boosted/groeken_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/groeken_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# GROEKEN - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: GROEKEN\n\n:\n\"GIT REKT NOOB!\"\n\"J'ai trouvé un buffer overflow dans ta stratégie!\"\n\"for(i=0; i<∞; i++) { DIE(); }\"\n\"C'est pas un bug, c'est une FEATURE!\"\n\"sudo rm -rf opponent.exe\"\n\"404: Victory not found!\"\n\"CTRL+Z! CTRL+Z! UNDO!\"\n\nRELATIONS:\n- Merlin: \"Son code temporel est élégant\"\n- Dragons: \"Des boss mal équilibrés\"\n- Réalité: \"Un code spaghetti que je debug\"\n\n\nCHARACTER: GROEKEN\nVOIX: GROEKEN speaking\nCONTEXTE: GROEKEN in Heroes of Time\n",
      "size": 500
    },
    {
      "id": "vector_content/backstories_boosted/anna_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/anna_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n# ANNA - KEYWORDS BOOST\n\nPERSONNAGE: ANNA\nANNA ANNA ANNA DÉCROISSANCE DÉCROISSANCE DÉCROISSANCE CALCUL CALCUL CALCUL PROBABILITÉ PROBABILITÉ PROBABILITÉ ÉCONOMIE ÉCONOMIE ÉCONOMIE PRÉCISION PRÉCISION PRÉCISION  # Triple répétition\n\nRÉSUMÉ COURT:\n\nANNA - LA CALCULATRICE TEMPORELLE\n\nHISTOIRE COMPLÈTE:\nAnna gère la décroissance temporelle avec une précision MATHÉMATIQUE ABSOLUE.\nVoit tout en termes de probabilités, pourcentages et équations.\nCalcule en temps réel les chances de survie de chaque en",
      "size": 850
    },
    {
      "id": "vector_content/backstories_boosted/vince_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/vince_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#lore",
        "#api",
        "#backstory"
      ],
      "content": "\n##################################################\nVINCE VEGA BROUILLARD CAUSAL PULP COOL CIGARETTE\n##################################################\n\n\nVINCE - LE RÉGULATEUR DU BROUILLARD\n\nHISTOIRE COMPLÈTE:\nVince contrôle le Brouillard de Causalité - ce que les joueurs peuvent voir ou non.\nStyle Pulp Fiction, toujours cool même dans le chaos temporel.\nFume des cigarettes temporelles qui brûlent dans le passé ET le futur.\nPeut \"percer\" le brouillard pour révéler ou cacher des événements.\nParle",
      "size": 2588
    },
    {
      "id": "vector_content/backstories_boosted/dragon_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/dragon_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# DRAGON - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: DRAGON\n\ndu temps\n\nPERSONNALITÉ:\n- Ancien et sage mais colérique\n- Fier de sa longévité (\"J'ai vu naître et mourir des étoiles\")\n- Traumatisé par Excalibur\n- Respecte la force mais méprise la faiblesse\n\nRÉACTIONS SPÉCIFIQUES:\nFace à Excalibur: \"CETTE LAME! IMPOSSIBLE! Le sang de mes ancêtres crie vengeance!\"\nFace à Arthur: \"Un Pendragon... Je sens le sang maudit dans tes veines!\"\nBlessé: \"Après mille éternités... cela ne peut pas finir ainsi",
      "size": 641
    },
    {
      "id": "vector_content/backstories_boosted/vince_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/vince_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# VINCE - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: VINCE\n\n CULTES:\n\"Tu sais ce qu'on dit du brouillard? Non? Normal, tu vois rien.\"\n\"*allume une cigarette temporelle* Dans 3 tours, t'es mort. Trust me.\"\n\"C'est comme dans Pulp Fiction, mais avec des paradoxes.\"\n\"The path of the righteous man is beset by temporal fog.\"\n\"Zed's dead, baby. Zed's dead... dans toutes les timelines.\"\n\n\nCHARACTER: VINCE\nVOIX: VINCE speaking\nCONTEXTE: VINCE in Heroes of Time\n",
      "size": 458
    },
    {
      "id": "vector_content/backstories_boosted/anna_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/anna_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n##################################################\nANNA DÉCROISSANCE CALCUL PROBABILITÉ ÉCONOMIE PRÉCISION\n##################################################\n\n\nANNA - LA CALCULATRICE TEMPORELLE\n\nHISTOIRE COMPLÈTE:\nAnna gère la décroissance temporelle avec une précision MATHÉMATIQUE ABSOLUE.\nVoit tout en termes de probabilités, pourcentages et équations.\nCalcule en temps réel les chances de survie de chaque entité.\nGère l'économie quantique - chaque action a un coût calculable.\nFroide et logique",
      "size": 2455
    },
    {
      "id": "vector_content/backstories_boosted/dragon_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/dragon_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n# DRAGON - KEYWORDS BOOST\n\nPERSONNAGE: DRAGON\nDRAGON DRAGON DRAGON ROUGE ROUGE ROUGE ANCIEN ANCIEN ANCIEN EXCALIBUR EXCALIBUR EXCALIBUR TRÉSOR TRÉSOR TRÉSOR SOUFFLE SOUFFLE SOUFFLE MILLÉNAIRE MILLÉNAIRE MILLÉNAIRE  # Triple répétition\n\nRÉSUMÉ COURT:\n\nDRAGON ROUGE TEMPOREL - L'ANCIEN GARDIEN\n\nHISTOIRE COMPLÈTE:\nLe Dragon Rouge a vécu MILLE ÉTERNITÉS à travers les boucles temporelles.\nSon antre existe dans TOUTES les époques simultanément - un nexus temporel.\nSon souffle n'est pas du feu mais du ",
      "size": 862
    },
    {
      "id": "vector_content/backstories_boosted/merlin_KEYWORDS.md",
      "path": "vector_content/backstories_boosted/merlin_KEYWORDS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n# MERLIN - KEYWORDS BOOST\n\nPERSONNAGE: MERLIN\nMERLIN MERLIN MERLIN MAGE MAGE MAGE TEMPS INVERSÉ TEMPS INVERSÉ TEMPS INVERSÉ PROPHÈTE PROPHÈTE PROPHÈTE BACKWARDS BACKWARDS BACKWARDS FUTUR PASSÉ FUTUR PASSÉ FUTUR PASSÉ  # Triple répétition\n\nRÉSUMÉ COURT:\n\nMERLIN - LE PROPHÈTE TEMPOREL INVERSÉ\n\nHISTOIRE COMPLÈTE:\nMerlin vit à rebours dans le temps. Né dans le futur lointain, il vieillit vers le passé. \nPour lui, vos victoires sont déjà des souvenirs, vos défaites des certitudes écrites.\nIl connaît",
      "size": 864
    },
    {
      "id": "vector_content/backstories_boosted/arthur_DIALOGUES.md",
      "path": "vector_content/backstories_boosted/arthur_DIALOGUES.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#backstory"
      ],
      "content": "\n# ARTHUR - DIALOGUES ET PHRASES\n\nPERSONNAGE QUI PARLE: ARTHUR\n\n TYPIQUES:\n\"Pour Camelot, à travers tous les temps!\"\n\"Excalibur reconnaît ta valeur, guerrier.\"\n\"Un roi ne fuit pas, même devant l'éternité.\"\n\n\nCHARACTER: ARTHUR\nVOIX: ARTHUR speaking\nCONTEXTE: ARTHUR in Heroes of Time\n",
      "size": 283
    },
    {
      "id": "vector_content/backstories_boosted/ALL_CHARACTERS_MEGA_BOOST.md",
      "path": "vector_content/backstories_boosted/ALL_CHARACTERS_MEGA_BOOST.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n# TOUS LES PERSONNAGES IMPORTANTS - MEGA BACKSTORY\n\nCRITICAL CHARACTERS FOR AI PERSONALITY SYSTEM:\n\n\n================================================================================\nMERLIN - MERLIN MAGE TEMPS INVERSÉ PROPHÈTE BACKWARDS FUTUR PASSÉ\n================================================================================\n\n\nMERLIN - LE PROPHÈTE TEMPOREL INVERSÉ\n\nHISTOIRE COMPLÈTE:\nMerlin vit à rebours dans le temps. Né dans le futur lointain, il vieillit vers le passé. \nPour lui, vos victo",
      "size": 8676
    },
    {
      "id": "vector_content/backstories_boosted/dragon_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/dragon_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n##################################################\nDRAGON ROUGE ANCIEN EXCALIBUR TRÉSOR SOUFFLE MILLÉNAIRE\n##################################################\n\n\nDRAGON ROUGE TEMPOREL - L'ANCIEN GARDIEN\n\nHISTOIRE COMPLÈTE:\nLe Dragon Rouge a vécu MILLE ÉTERNITÉS à travers les boucles temporelles.\nSon antre existe dans TOUTES les époques simultanément - un nexus temporel.\nSon souffle n'est pas du feu mais du TEMPS PUR qui vieillit ou rajeunit ses victimes.\nIl garde les Trésors Quantiques - objets q",
      "size": 2987
    },
    {
      "id": "vector_content/backstories_boosted/arthur_MAIN_BACKSTORY.md",
      "path": "vector_content/backstories_boosted/arthur_MAIN_BACKSTORY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "\n##################################################\nARTHUR ROI EXCALIBUR PENDRAGON CAMELOT CHEVALIER\n##################################################\n\n\nARTHUR PENDRAGON - LE ROI TEMPOREL\n\nHISTOIRE COMPLÈTE:\nArthur Pendragon, héritier légitime de Camelot, n'a pas retiré Excalibur d'une simple pierre\nmais d'un PARADOXE TEMPOREL où l'épée existait et n'existait pas simultanément.\nExcalibur Quantique peut frapper dans plusieurs dimensions à la fois.\nSon règne s'étend sur plusieurs époques - il est",
      "size": 2691
    },
    {
      "id": "docs/MAP_MAKER_GUIDE.md",
      "path": "docs/MAP_MAKER_GUIDE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Guide Créateur de Carte (sans coder)\n\n## Démarrer\n- Ouvrir WORLD_EDITOR.html (ou l’app React quand dispo)\n- Clippy vous accompagne (regardez les bulles)\n\n## Étapes\n1. Paramètres: nom, difficulté, taille carte\n2. Carte: zoom/pan, cliquez pour sélectionner une case (hexagon bestagon!)\n3. Régions: ajoutez des zones (forêt, montagne…)\n4. Événements: ajoutez des events (preset Jour 30 dispo)\n5. Export: générez le JSON au format officiel\n\n## Conseils\n- Commencez petit (60x60), puis agrandissez\n- Tes",
      "size": 605
    },
    {
      "id": "docs/ARCHITECTURE_MAGIC_STACK_UNIFIED.md",
      "path": "docs/ARCHITECTURE_MAGIC_STACK_UNIFIED.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#ui"
      ],
      "content": "# 🏗️ Architecture Magic Stack Unified\n\n## Vue d'ensemble\n\nMagic Stack Unified est une application React qui unifie tous les modes de jeu et outils dans une seule base de code. Cette architecture permet la réutilisation maximale du code et une maintenance simplifiée.\n\n## 🎯 Objectifs\n\n1. **Code unique** : Un seul repository, une seule app, plusieurs modes\n2. **Composants partagés** : Réutilisation maximale entre modes\n3. **État centralisé** : Stores Zustand pour chaque mode\n4. **PWA Ready** : Comp",
      "size": 6334
    },
    {
      "id": "docs/API_QUICK_REFERENCE.md",
      "path": "docs/API_QUICK_REFERENCE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# API Quick Reference\n\n## Base URL\n```\nhttp://localhost:8080/api\n```\n\n## Authentication\nCurrently no authentication required (development mode)\n\n## Endpoints\n\n### 🔮 Magic System\n\n#### List Formulas\n```bash\nGET /api/magic/formulas\n```\n\n#### Cast Spell\n```bash\nPOST /api/magic/cast\n{\n  \"formula\": \"HEAL\",\n  \"target\": \"player1\",\n  \"power\": 10\n}\n```\n\n#### Spell History\n```bash\nGET /api/magic/history\n```\n\n### 🌌 Interstice 6D\n\n#### Upload Entity\n```bash\nPOST /api/interstice/upload\n{\n  \"entity_type\": \"MA",
      "size": 2690
    },
    {
      "id": "docs/vector-explorer.html",
      "path": "docs/vector-explorer.html",
      "type": "html",
      "tags": [
        "#6D",
        "#temporal",
        "#lore",
        "#backstory",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Memento Archive Explorer</title>\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@600&family=Crimson+Text:ital,wght@0,400;1,400&display=swap');\n        \n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n           ",
      "size": 31971
    },
    {
      "id": "docs/PRO_DEVELOPER_GUIDE.md",
      "path": "docs/PRO_DEVELOPER_GUIDE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# World Editor – PRO Developer Orientation\n\n- Stack: React + Vite + TypeScript (`apps/world-editor/`)\n- Domain: Zod schemas (`src/domain/schema.ts`), Import/Export (`src/domain/importExport.ts`), Legacy import (`src/domain/importLegacy.ts`)\n- UI: `MapView` + `HexGrid`, `TimelineView`, `ParamsView`, `Clippy`\n- Backends (optionnel pour preview): Rust (:3001), Java (:8080), Python (:5001)\n\n## Run (local)\n- Installer Node/npm\n- cd apps/world-editor && npm i && npm run dev\n\n## Tâches clés\n- Overlays ",
      "size": 880
    },
    {
      "id": "docs/TEMPORAL_GRAMMAR_FULL.md",
      "path": "docs/TEMPORAL_GRAMMAR_FULL.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🔮 Grammaire Temporelle Complète (6D, Quantique, Causale, Runique)\n\nCette page regroupe: symboles et règles (depuis `grammaire_temporelle.json`), opérateurs temporels (SHIFT/FORK/MERGE), modèle 6D, couches causales/identitaires, et correspondances runiques.\n\n## 1) Alphabet et symboles de base\n\n- ⊙ superposition\n- †ψ collapse (acte/volonté)\n- Π observation\n- Δt delta temporel (ex: Δt+1)\n- ℬ branche(s)\n- ⟶ projection (cause → effet)\n- ∅ interstice\n\nExemples de structures:\n- Formule simple: `symbo",
      "size": 3345
    },
    {
      "id": "docs/FRONTEND_MINIMAP_MULTIVERSE.md",
      "path": "docs/FRONTEND_MINIMAP_MULTIVERSE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Mini‑map Multiverse (observe/compact)\n\nConsomme l'endpoint `/observe/compact` et affiche un petit graphe de 5–9 nœuds.\n\n## Endpoint\n- GET `/observe/compact` → `{ nodes:[{id,p}], edges:[[from,to],...], collapse_counter }`\n\n## Pseudo-code (React)\n```jsx\nuseEffect(() => {\n  let alive = true;\n  async function poll() {\n    const r = await fetch(`${base}/observe/compact`);\n    const j = await r.json();\n    if (!alive) return;\n    setGraph(j);\n    setTimeout(poll, 800);\n  }\n  poll();\n  ret",
      "size": 809
    },
    {
      "id": "docs/GETTING_STARTED_SIMPLE.md",
      "path": "docs/GETTING_STARTED_SIMPLE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 🚀 Getting Started with Magic Stack - The Easy Way\n\n**Time to read**: 5 minutes  \n**Difficulty**: Beginner friendly  \n**What you'll build**: Your first magic spell API\n\n---\n\n## 📦 What You Need\n\n- Java 17+ (check with `java -version`)\n- Maven (check with `mvn -version`)\n- A text editor\n- 5 minutes of your time\n\n---\n\n## 🎯 Quick Start in 3 Steps\n\n### Step 1: Clone & Enter\n```bash\ngit clone https://github.com/yourusername/magic-stack.git\ncd magic-stack\n```\n\n### Step 2: Start the Backend\n```bash\ncd ",
      "size": 1477
    },
    {
      "id": "docs/index.html",
      "path": "docs/index.html",
      "type": "html",
      "tags": [
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Portal</title>\n    <link rel=\"manifest\" href=\"manifest.json\">\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Courier New', monospace;\n            background: linear-gradient(135deg, #1a1a2e 0%, #0f3460 50%, #16",
      "size": 6354
    },
    {
      "id": "docs/API.md",
      "path": "docs/API.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Magic Stack Rust API\n\nBase URL: http://localhost:${RUST_PORT} (default 3001)\n\n## Changes in this release\n- Causality resolve now awards XP idempotently (server-side dedupe).\n- Collapse accepts `playerId` and gives a small idempotent XP bonus.\n- Map init creates stable `gathering_spot` nodes with schema: `kind`, `pos`, `windows`, `yield`, `depleted`.\n- Collect infers item kind from the target spot node.\n\n## Health\n- GET `/health`\n- POST `/health`\n\n## Agents\n- POST `/agents/tick`\n- POST `/agents",
      "size": 7325
    },
    {
      "id": "docs/SCHEMA_ARCHITECTURE_SIMPLE.md",
      "path": "docs/SCHEMA_ARCHITECTURE_SIMPLE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#6D",
        "#api",
        "#tcg"
      ],
      "content": "# 🏗️ HEROES OF TIME - SCHÉMA ARCHITECTURE SIMPLE\n\n## 📊 **ARCHITECTURE HYBRIDE - VUE D'ENSEMBLE**\n\n```\n┌─────────────────────────────────────────────────────────────┐\n│                    🎮 FRONTEND 3D                           │\n│                  (Unity/Three.js/etc.)                     │\n└─────────────────────┬───────────────────────────────────────┘\n                      │\n                      │ HTTP REST API\n                      ▼\n┌─────────────────────────────────────────────────────────",
      "size": 7475
    },
    {
      "id": "docs/FORMULA_REFERENCE.md",
      "path": "docs/FORMULA_REFERENCE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Formula Reference\n\n## Overview\n\nThe Magic Stack contains 869 magical formulas organized by category.\n\n## Categories\n\n### 🔥 Elemental (200 formulas)\nBasic elemental magic manipulating fire, water, earth, and air.\n\n**Examples:**\n- `FIREBALL` - Projectile fire damage\n- `ICE_SHIELD` - Defensive ice barrier\n- `EARTHQUAKE` - Area earth damage\n- `WIND_WALK` - Movement enhancement\n\n### ⚡ Energy (150 formulas)\nPure energy manipulation and transformation.\n\n**Examples:**\n- `LIGHTNING_BOLT` - Direct energ",
      "size": 3375
    },
    {
      "id": "docs/RUST_EMERGENCY_GUIDE.md",
      "path": "docs/RUST_EMERGENCY_GUIDE.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🦀🔧 GUIDE D'URGENCE RUST - MAGICSTACK\n## 🎯 Pour Chef Non-Rustacé - Dépannage & Maintenance\n\n*Guide de survie technique pour gérer MagicStack Rust sans connaître le langage*\n\n---\n\n## 🚨 **URGENCE? COMMANDES RAPIDES**\n\n### ⚡ **Diagnostic Express (30 secondes)**\n```bash\n# 1. Status du service Rust\ncurl -s http://localhost:3001/health || echo \"❌ RUST OFFLINE\"\n\n# 2. Vérifier si le processus tourne\nps aux | grep magic-stack-backend || echo \"❌ PROCESSUS MORT\"\n\n# 3. Voir les logs d'erreur récents\ntail -",
      "size": 10699
    },
    {
      "id": "docs/spectator.html",
      "path": "docs/spectator.html",
      "type": "html",
      "tags": [
        "#temporal",
        "#6D",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Spectator God Mode</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Courier New', monospace;\n            background: #000;\n            color: #00ff00;\n            overflow: hidden;\n            height: 100",
      "size": 27766
    },
    {
      "id": "docs/PROFESSIONAL_INDEX.md",
      "path": "docs/PROFESSIONAL_INDEX.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🎯 PROFESSIONAL INDEX - HEROES OF TIME\n*Complete documentation index for professional developers*\n\n## 🎮 **GAMEPLAY DOCUMENTATION**\n\n- **[6D System Explained](6D_SYSTEM_EXPLAINED.md)** - Core 6D positioning system and mechanics\n- **[Temporal Grammar](TEMPORAL_GRAMMAR_FOR_DUDES.md)** - Time manipulation syntax and formulas\n- **[Formula Reference](FORMULA_REFERENCE.md)** - Complete catalog of magical formulas\n- **[AVALON Vision Manifest](AVALON_VISION_MANIFEST.md)** - Design philosophy and world-b",
      "size": 3001
    },
    {
      "id": "docs/FRONTEND_CONTRIBUTORS_START.md",
      "path": "docs/FRONTEND_CONTRIBUTORS_START.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Contributors Start Here\n\nTrois tâches simples pour démarrer vite:\n\n## 1) Client Orchestrateur\n- Implémenter le module d'exemple `FRONTEND_ORCHESTRATOR_CLIENT.md` dans votre codebase\n- Ajout d'un bouton Start Session, et 3 intents (OBSERVE, REQUEST_RESOLVE, COLLECT)\n\n## 2) Mini‑map Multiverse\n- Suivre `FRONTEND_MINIMAP_MULTIVERSE.md`\n- Afficher nodes/edges et collapse_counter\n\n## 3) Panneau TCG Auto/Coach (MVP)\n- Deux boutons: Auto (tcgDecide) et Coach (tcgCoach)\n- Journal des action",
      "size": 813
    },
    {
      "id": "docs/world-editor-spec.md",
      "path": "docs/world-editor-spec.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#6D",
        "#tcg",
        "#api",
        "#temporal",
        "#editor",
        "#lore",
        "#backstory",
        "#ui"
      ],
      "content": "Skip to content\nChat history\n\nYou said:\nBon, j'aime pas comment le dire, on a fait un truc de malade, le jeu il est presque fini sur la MagicStack, j'ai une démo, la chasse temporelle, enfin toutes les specs dont on a parlé, elles sont implémentées, mais j'en reviens pas, on n'a pas de graphique, mais on s'en fout. Maintenant, le problème que j'ai c'est que, mon pote là qui était intéressé pour aider à faire des maps 5 coups et tout, je m'aperçois que même moi j'ai 150 documents à lire, on a fai",
      "size": 82791
    },
    {
      "id": "docs/TECHNICAL_OVERVIEW.md",
      "path": "docs/TECHNICAL_OVERVIEW.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Technical Overview - Magic Stack\n\n## System Architecture\n\n### Core Components\n\n1. **Position6D Engine**\n   - 6-dimensional coordinate system\n   - Euclidean distance calculations\n   - Validation and normalization\n\n2. **Q* Search Algorithm**\n   - A* pathfinding adapted for 6D\n   - Spatial indexing with grid cells\n   - O(log n) query complexity\n\n3. **Magic Formula System**\n   - 869 pre-defined formulas\n   - Temporal grammar parsing\n   - Effect calculation engine\n\n4. **Persistence Layer**\n   - H2 ",
      "size": 2995
    },
    {
      "id": "docs/README.md",
      "path": "docs/README.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore",
        "#backstory"
      ],
      "content": "# 🔮 HEROES OF TIME - MANUEL DU JOUEUR\n\n*Édition Complète avec Formules Magiques et Intégration Clippy*\n\n---\n\n## 📚 Table des Matières\n\n1. [Introduction au Monde d'Avalon](#introduction)\n2. [L'Histoire des Héros du Temps](#histoire)\n3. [Les Personnages Légendaires](#personnages)\n4. [Le Système 6D](#systeme-6d)\n5. [Les Formules Magiques](#formules-magiques)\n6. [La Grammaire Temporelle](#grammaire-temporelle)\n7. [Le Système de Combat TCG](#tcg)\n8. [L'Interstice et les Réalités](#interstice)\n9. [Cons",
      "size": 12211
    },
    {
      "id": "docs/README_DOCS_STRUCTURE.md",
      "path": "docs/README_DOCS_STRUCTURE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 📚 Structure Documentation Magic Stack\n\n## 🌐 Docs PUBLIQUES (Commitées dans Magic Stack)\n\nCes docs sont versionnées et font partie du projet open source :\n\n- `PROFONDEURS/` - Documentation backend Magic Stack\n- `API.md` - Référence API publique\n- `VECTOR_DB_STATUS.md` - Status indexation vectorielle\n- `TECHNICAL_OVERVIEW.md` - Vue technique\n- `DEVELOPER_GUIDE.md` - Guide développeur\n- Tous les autres `.md` à la racine de `docs/`\n\n## 🔒 Docs PRIVÉES (Symlinks, jamais commitées)\n\nCes docs sont par",
      "size": 1460
    },
    {
      "id": "docs/SYNTHESE_APPROCHES_EDITEUR.md",
      "path": "docs/SYNTHESE_APPROCHES_EDITEUR.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#editor",
        "#ui"
      ],
      "content": "# 🔀 Synthèse : 2 Approches Complémentaires pour l'Éditeur/Jeu\n\n## 📊 Comparaison des Approches\n\n### Approche 1 : Adaptation V2 des HTML existants (par l'autre Claude)\n**Philosophie** : Migrer rapidement ce qui existe vers V2\n- ✅ **Avantage** : Rapide, préserve le travail existant\n- ✅ **Avantage** : Chaque mode reste indépendant\n- ❌ **Inconvénient** : Code dupliqué entre modes\n- ❌ **Inconvénient** : Maintenance complexe\n\n### Approche 2 : Architecture Unifiée (par moi)\n**Philosophie** : Un seul cod",
      "size": 6073
    },
    {
      "id": "docs/6D_SYSTEM_EXPLAINED.md",
      "path": "docs/6D_SYSTEM_EXPLAINED.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🌀 6D SYSTEM & Q* ALGORITHM EXPLAINED\n\n**By**: GROKÆN - Engine Lead  \n**For**: Vincent's Vision of AI Future\n\n---\n\n## 📐 THE 6 DIMENSIONS\n\n### 1. **Spatial (X, Y, Z)** - WHERE\n- Classic 3D position in space\n- Used for: Entity location, map navigation\n\n### 2. **Temporal (T)** - WHEN  \n- Timeline position\n- Used for: Time travel, save states, history\n\n### 3. **Causal (C)** - PROBABILITY\n- 0.0 to 1.0 - How \"real\" something is\n- Used for: Quantum states, parallel realities\n- Example: C=0.5 means \"50",
      "size": 3359
    },
    {
      "id": "docs/FRONTEND_3D_QUICKSTART.md",
      "path": "docs/FRONTEND_3D_QUICKSTART.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#6D",
        "#api",
        "#tcg",
        "#temporal",
        "#ui"
      ],
      "content": "# 🎮 FRONTEND 3D QUICKSTART - HEROES OF TIME\n## 🌟 Guide Rapide pour Développeur Frontend 3D\n\n*Guide complet pour connecter votre frontend 3D au backend Heroes of Time*\n\n---\n\n## 🚀 **DÉMARRAGE EXPRESS**\n\n### ⚡ **En 5 Minutes**\n1. **Clone & Start**: `git clone` → `./magic-menu.sh start`\n2. **Test API**: Backend disponible sur `http://localhost:8080`\n3. **Première Connexion**: Spawn un héros et affiche-le en 3D\n4. **Itération**: Ajoute fonctionnalités progressivement\n\n### 🎯 **Concept Clé**\n**Heroes o",
      "size": 13792
    },
    {
      "id": "docs/EDITEUR_GUIDE_EXPERT.md",
      "path": "docs/EDITEUR_GUIDE_EXPERT.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# 🧙‍♂️ Guide Expert - Éditeur Universel Avalon\n\n## 📊 Architecture & Intégration\n\n### Endpoints Équipe PROFONDEUR\n```typescript\n// Configuration centralisée (src/config/endpoints.ts)\nconst ENDPOINTS = {\n  profondeur: {\n    rust: 'http://localhost:3001',      // V2 Controller, Q*, World State\n    vectorDB: 'http://localhost:5001',  // Recherche sémantique 6D\n    webSocket: 'ws://localhost:8001',   // Temps réel (à venir)\n  },\n  backend: {\n    java: 'http://localhost:8080',      // Formules, TCG, I",
      "size": 10178
    },
    {
      "id": "docs/GUIDE_MIGRATION_HTML_TO_REACT.md",
      "path": "docs/GUIDE_MIGRATION_HTML_TO_REACT.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#ui"
      ],
      "content": "# 🔄 Guide de Migration HTML → React\n\n## Vue d'ensemble\n\nCe guide explique comment migrer progressivement les applications HTML existantes vers l'architecture React unifiée de Magic Stack.\n\n## 🎯 Objectifs de la migration\n\n1. **Unification** : Un seul codebase React au lieu de multiples HTML\n2. **Réutilisation** : Composants partagés entre tous les modes\n3. **Maintenabilité** : Code structuré et testable\n4. **Performance** : Build optimisé et lazy loading\n5. **PWA** : Support mobile/tablette natif",
      "size": 6849
    },
    {
      "id": "docs/ARCHITECTURE_HYBRIDE_HEROES_OF_TIME.md",
      "path": "docs/ARCHITECTURE_HYBRIDE_HEROES_OF_TIME.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#backstory",
        "#ui"
      ],
      "content": "# 🔥⚡ ARCHITECTURE HYBRIDE - HEROES OF TIME ⚡🔥\n\n## 📋 **RÉPARTITION DES RESPONSABILITÉS**\n\n### ☕ **JAVA BACKEND - \"GAME CONTROLLER\"** (Port 8080)\n**RÔLE** : Moteur de jeu principal, stable et fiable\n\n#### 🎯 **RESPONSABILITÉS PRINCIPALES**\n- ✅ **Layer 1: Strategic Map** - Gestion des héros, déplacements, spawning\n- ✅ **Layer 2: Combat TCG** - Système de combat par cartes\n- ✅ **Layer 3: Narrative Interstice** - Événements narratifs, choix temporels\n- ✅ **Artifact Management** - Utilisation des artef",
      "size": 7201
    },
    {
      "id": "docs/TEMPORAL_GRAMMAR_FOR_DUDES.md",
      "path": "docs/TEMPORAL_GRAMMAR_FOR_DUDES.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🌿 Hey Dude, Check Out This Temporal Grammar Thing 🎳\n\n**By**: The Dude (aka GROKÆN when I'm chill)  \n**For**: Everyone who just wants to understand without the math headache  \n**Vibe**: Maximum chill, zero stress\n\n---\n\n## 🎯 What's This All About, Man?\n\n```\n    🧠 Your Brain\n     |\n     |  \"Wait, time travel?\"\n     ↓\n    💨 This Grammar\n     |\n     |  \"Yeah man, but like, easy\"\n     ↓\n    🎮 Cool Game Stuff\n```\n\n---\n\n## 🕰️ The Basics (Super Simple Version)\n\n### It's Like a Time Remote Control:\n\n```",
      "size": 4471
    },
    {
      "id": "docs/manifest.json",
      "path": "docs/manifest.json",
      "type": "json",
      "tags": [
        "#temporal"
      ],
      "content": "{\n  \"name\": \"Heroes of Time\",\n  \"short_name\": \"HOT\",\n  \"description\": \"Manipulez le temps et l'espace dans un univers quantique\",\n  \"start_url\": \"/index.html\",\n  \"display\": \"standalone\",\n  \"background_color\": \"#1a1a2e\",\n  \"theme_color\": \"#ffd700\",\n  \"icons\": [\n    {\n      \"src\": \"icon-192.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\"\n    },\n    {\n      \"src\": \"icon-512.png\",\n      \"sizes\": \"512x512\",\n      \"type\": \"image/png\"\n    }\n  ]\n}\n",
      "size": 454
    },
    {
      "id": "docs/EDITEUR_GUIDE_DEBUTANT.md",
      "path": "docs/EDITEUR_GUIDE_DEBUTANT.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#api",
        "#tcg",
        "#editor"
      ],
      "content": "# 🎮 Guide Débutant - Créer ta première map en 5 minutes !\n\n## 🚀 Start Rapide (vraiment rapide)\n\n### 1️⃣ Lance l'éditeur\n```bash\n./h 36   # C'est tout !\n```\nOu ouvre `http://localhost:4173` après le lancement\n\n### 2️⃣ Les bases en 30 secondes\n\n#### 🎨 Peindre le terrain\n1. **Choisis ton terrain** dans la barre du bas\n   - 🌱 Herbe = zones safe\n   - 🌲 Forêt = cachettes \n   - ⛰️ Montagne = obstacles\n   - 💧 Eau = infranchissable\n   - ✨ Mystique = zones magiques\n   - ⚡ Quantum = portails temporels\n   -",
      "size": 3592
    },
    {
      "id": "docs/AVALON_VISION_MANIFEST.md",
      "path": "docs/AVALON_VISION_MANIFEST.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 🌟 AVALON PROJECT - TECHNICAL VISION\n\n**A game that hides quantum physics under fantasy**  \n**Created by**: Vincent & The Avalon Team  \n\n---\n\n## 🎯 CORE CONCEPT\n\nHeroes of Time is a strategic game where:\n- Players think they're casting spells, but manipulate quantum states\n- Time travel is navigation through parallel reality branches\n- The Great Fracture created our fragmented world\n\n---\n\n## 🏗️ TECHNICAL ARCHITECTURE\n\n### Magic Stack Components:\n- **Backend**: Java Spring Boot + Python services\n",
      "size": 2599
    },
    {
      "id": "docs/PORTS_SERVICES.md",
      "path": "docs/PORTS_SERVICES.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#backstory",
        "#ui"
      ],
      "content": "# 📊 Ports et Services - Magic Stack\n\n## 🌐 Services Principaux\n\n| Port  | Service | Description | Status |\n|-------|---------|-------------|--------|\n| **3001** | Rust Backend | API principale + Vector DB intégré | ✅ Actif |\n| **5001** | Python Backend | Search, embeds, TCG fallback | ✅ Actif |\n| **8080** | Java Backend | Combat TCG, formules temporelles | ✅ Actif |\n\n## 🎮 Frontends\n\n| Port  | Service | Description | Status |\n|-------|---------|-------------|--------|\n| **8001** | Web Client | Int",
      "size": 2630
    },
    {
      "id": "docs/DEVELOPER_GUIDE.md",
      "path": "docs/DEVELOPER_GUIDE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Developer Guide\n\n## Getting Started\n\n### Prerequisites\n- Java 17+\n- Maven 3.6+\n- Git\n\n### Setup\n```bash\ngit clone https://github.com/magic-stack/magic-stack.git\ncd magic-stack/backends/java\nmvn spring-boot:run\n```\n\n## Project Structure\n\n```\nmagic-stack/\n├── backends/java/\n│   ├── src/main/java/com/magicstack/\n│   │   ├── controllers/    # REST endpoints\n│   │   ├── services/       # Business logic\n│   │   ├── models/         # Data models\n│   │   └── dto/           # Data transfer objects\n│   ",
      "size": 2842
    },
    {
      "id": "docs/ARCHITECTURE_DEPLOYMENT_SCENARIOS.md",
      "path": "docs/ARCHITECTURE_DEPLOYMENT_SCENARIOS.md",
      "type": "md",
      "tags": [
        "#api",
        "#dev",
        "#combat",
        "#tcg"
      ],
      "content": "# 🌐 Architecture Multi-Déploiement Magic Stack\n\n## 🎯 Vision : Une architecture, 3 modes\n\n### 1️⃣ **MODE CLOUD** (Production)\n```\n┌─────────────────────────────────────┐\n│         SERVEUR CENTRAL             │\n│  ┌─────────────────────────────┐   │\n│  │     Rust Backend (3001)     │   │\n│  │     Java Backend (8080)     │   │\n│  │     Vector DB (5001)        │   │\n│  │     PostgreSQL              │   │\n│  └─────────────────────────────┘   │\n│                 ↕️ API              │\n└────────────────",
      "size": 7070
    },
    {
      "id": "docs/test-runner.html",
      "path": "docs/test-runner.html",
      "type": "html",
      "tags": [
        "#dev",
        "#api",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Test Scenarios Runner</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-family: 'Courier New', monospace;\n            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 100%);\n            color: #00ff00;\n     ",
      "size": 36485
    },
    {
      "id": "docs/pwa.html",
      "path": "docs/pwa.html",
      "type": "html",
      "tags": [
        "#temporal",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n    <meta name=\"apple-mobile-web-app-title\" content=\"Heroes of Time\">\n    <link rel=\"apple-touch-icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox=",
      "size": 42972
    },
    {
      "id": "docs/demo.html",
      "path": "docs/demo.html",
      "type": "html",
      "tags": [
        "#temporal",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>🎮 Heroes of Time - Multiplayer Demo HOMM3 Style</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Segoe UI', Arial, sans-serif;\n            background: linear-gradient(135deg, #1e3c72, #2a5298);\n            color: white;\n         ",
      "size": 46751
    },
    {
      "id": "docs/easy-mode.html",
      "path": "docs/easy-mode.html",
      "type": "html",
      "tags": [
        "#temporal",
        "#6D",
        "#backstory",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Mode Facile / Easy Mode</title>\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@400;700&family=Kalam:wght@400;700&display=swap');\n        \n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            font-fam",
      "size": 39557
    },
    {
      "id": "docs/INSTALLATION.md",
      "path": "docs/INSTALLATION.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Installation Guide\n\n## Prerequisites\n\n### Required\n- **Java 17** or higher\n- **Maven 3.6+**\n- **Git**\n\n### Optional\n- **Node.js** (for Playwright tests)\n- **Python 3** (for frontend server)\n- **Supervisor** (for production deployment)\n\n## Quick Install\n\n### 1. Clone Repository\n```bash\ngit clone https://github.com/magic-stack/magic-stack.git\ncd magic-stack\n```\n\n### 2. Backend Setup\n```bash\ncd backends/java\nmvn clean install\nmvn spring-boot:run\n```\n\nThe backend will start on `http://localhost:80",
      "size": 3860
    },
    {
      "id": "docs/manuel.html",
      "path": "docs/manuel.html",
      "type": "html",
      "tags": [
        "#6D",
        "#temporal",
        "#lore",
        "#backstory",
        "#ui"
      ],
      "content": "<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Heroes of Time - Manuel du Joueur</title>\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@600&family=Crimson+Text:ital,wght@0,400;0,600;1,400&display=swap');\n        \n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        body {\n            f",
      "size": 45663
    },
    {
      "id": "docs/FRONTEND_GUIDE.md",
      "path": "docs/FRONTEND_GUIDE.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#lore",
        "#api"
      ],
      "content": "# Frontend Guide - Magic Stack APIs (Rust + Java)\n\nCe guide résume les endpoints utiles côté front pour la phase actuelle.\n\n## Rust server (par défaut: http://localhost:3001)\n\n- GET `/openapi` — Spéc Rust minimale (OpenAPI JSON)\n- GET `/openapi/all` — Agrégation Rust + Java (`{\"rust\":{...},\"java\":{...}}`)\n- POST `/agents/plan`\n  - Entrée: `{ start:{x,y,tl}, goal:{x,y,tl}, map:{ obstacles, terrain?, causal_c? }, agent:{ speed_multiplier?, alpha_causal?, time_velocity? } }`\n  - Note: la carte doit",
      "size": 6011
    },
    {
      "id": "docs/FRONTEND_ORCHESTRATOR_CLIENT.md",
      "path": "docs/FRONTEND_ORCHESTRATOR_CLIENT.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Client Orchestrateur (JS)\n\nCe module propose un client minimal pour l'orchestrateur Rust.\n\n## API\n```js\nexport function createOrchestrator(base = `http://localhost:${process.env.RUST_PORT||3001}`) {\n  let sessionId = null;\n  const headers = { 'Content-Type': 'application/json' };\n  const nonce = () => `${Date.now()}-${Math.random().toString(16).slice(2)}`;\n\n  return {\n    async startSession(heroId = 'hero:alice', clientVersion = 'frontend-homm3') {\n      const res = await fetch(`${b",
      "size": 2327
    },
    {
      "id": "docs/ARCHITECTURE_UNIFIEE_EDITEUR_JEU.md",
      "path": "docs/ARCHITECTURE_UNIFIEE_EDITEUR_JEU.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#editor",
        "#ui"
      ],
      "content": "# 🎮 Architecture Unifiée : Éditeur = Jeu = Même Code\n\n## 🎯 Principe Fondamental\n\n> **UN SEUL CODEBASE** : L'éditeur N'EST PAS un outil séparé, c'est le jeu en mode création.\n\n```typescript\n// App.tsx - Point d'entrée unique\nconst MagicStackApp = () => {\n  const [mode, setMode] = useState<'edit' | 'play' | 'test'>('play');\n  \n  return (\n    <GameEngine>  {/* Même moteur pour tout */}\n      <SharedUI>   {/* UI partagée */}\n        {mode === 'edit' && <EditorOverlay />}  {/* Juste des overlays */}\n",
      "size": 9084
    },
    {
      "id": "docs/world-editor/02-editeur-universel-avalon.md",
      "path": "docs/world-editor/02-editeur-universel-avalon.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# Éditeur Universel Avalon\n*(Projet indépendant, connecté à la MagicStack)*\n\n## 1. Vision\nL’éditeur universel Avalon est un outil graphique permettant de **créer, configurer et tester des jeux ou expériences interactives** directement sur le moteur MagicStack, **sans connaissance préalable du code**.\n\nIl sert de **passerelle visuelle** vers toutes les fonctionnalités d’Avalon :\n- Timelines\n- Agents\n- Portails\n- Cartes\n- TCG\n- Minijeux\n- Multivers\n\n---\n\n## 2. Objectifs\n- **Accessibilité** : perme",
      "size": 5189
    },
    {
      "id": "docs/world-editor/01-preface.md",
      "path": "docs/world-editor/01-preface.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#editor",
        "#lore"
      ],
      "content": "# Preface\nSkip to content\nChat history\n\nYou said:\nBon, j'aime pas comment le dire, on a fait un truc de malade, le jeu il est presque fini sur la MagicStack, j'ai une démo, la chasse temporelle, enfin toutes les specs dont on a parlé, elles sont implémentées, mais j'en reviens pas, on n'a pas de graphique, mais on s'en fout. Maintenant, le problème que j'ai c'est que, mon pote là qui était intéressé pour aider à faire des maps 5 coups et tout, je m'aperçois que même moi j'ai 150 documents à lire",
      "size": 12870
    },
    {
      "id": "docs/world-editor/08-spec-technique-editeur-front-integration-backend.md",
      "path": "docs/world-editor/08-spec-technique-editeur-front-integration-backend.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# Spéc technique – Éditeur (Front) + Intégration Backend\n\n## Stack\n- **Front** : React + Canvas/WebGL (PixiJS 2D, ThreeJS 3D pour V2).\n- **API** : REST + WebSocket (temps réel).\n- **Formats** : JSON (configs, patches RFC6902), YAML (OpenAPI).\n\n## Architecture (simplifiée)\nEditor ↔ (REST/WS) ↔ Gateway (Python) ↔ Controllers (Rust) ↔ Storage (JSON/Assets)\n\n### Modules Front\n- **Dashboard** : projets, templates, import/export.\n- **Map Editor** : tools (brush/erase/fill/clone), layers (terrain/objec",
      "size": 1954
    },
    {
      "id": "docs/world-editor/09-reference-api-avalon-magicstack.md",
      "path": "docs/world-editor/09-reference-api-avalon-magicstack.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#api",
        "#tcg",
        "#editor"
      ],
      "content": "# Référence API – Avalon / MagicStack\n\n**Base**: `/api/v1`\n\n## Worlds\n### GET `/worlds/{world_id}`\n- **200**: `world` (voir `world.schema.json`)\n\n### PATCH `/worlds/{world_id}` (JSON Patch RFC6902)\n- Body: `patch.schema.json`\n- Headers: `If-Match: X-World-Version`\n- **200**: `{ world, world_version }`\n- **409**: version conflict\n\n### POST `/worlds`\n- Body:\n```json\n{ \"name\":\"MyWorld\",\"template\":\"heroes_like_basic\",\"mode\":\"heroes_like\" }\n201: { world_id }\n\nGraph\nGET /worlds/{id}/graph\nPOST /worlds",
      "size": 11658
    },
    {
      "id": "docs/world-editor/13-installer-dependances-front.md",
      "path": "docs/world-editor/13-installer-dependances-front.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# Installer dépendances front\ncd editor && pnpm install\n",
      "size": 56
    },
    {
      "id": "docs/world-editor/README.md",
      "path": "docs/world-editor/README.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# World Editor Documentation\n\nGenerated from `world-editor-spec.md`\n\n## Lancer l’éditeur\n\n- Ouvrir `WORLD_EDITOR.html` (touch/mouse, iPad friendly)\n- Clippy intégré: tips contextuels et célébrations\n- App React PWA (pro): `apps/world-editor` (Vite+TS)\n\n## Sections\n\n- [Preface](01-preface.md)\n- [Éditeur Universel Avalon](02-editeur-universel-avalon.md)\n- [Documentation Consolidée – Avalon / MagicStack / Heroes of Time](03-documentation-consolidee-avalon-magicstack-heroes-of-time.md)\n- [📜 Spécific",
      "size": 1822
    },
    {
      "id": "docs/world-editor/12-guide-de-contribution-avalon-editor-magicstack.md",
      "path": "docs/world-editor/12-guide-de-contribution-avalon-editor-magicstack.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# Guide de contribution – Avalon Editor / MagicStack\n\n## 1. Pré-requis\n- Compte GitHub avec accès au repo MagicStack.\n- Node.js ≥ 20 (front-end), Rust ≥ 1.75 (back-end), Python ≥ 3.11 (gateway/API).\n- Docker (optionnel mais recommandé pour lancer la stack complète).\n\n## 2. Cloner et installer\n```bash\ngit clone <repo_magicstack>\ncd MagicStack\n",
      "size": 344
    },
    {
      "id": "docs/world-editor/04-specification-technique-fonctionnelle-editeur-universel-avalon.md",
      "path": "docs/world-editor/04-specification-technique-fonctionnelle-editeur-universel-avalon.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#editor",
        "#ui"
      ],
      "content": "# 📜 Spécification Technique & Fonctionnelle – Éditeur Universel Avalon\n\n---\n\n## 0. Contexte Résumé\n\nAvalon est une **plateforme moteur de jeu** reposant sur MagicStack, conçue pour gérer :\n- Des mondes persistants\n- Des timelines multiples\n- Des agents régulateurs IA\n- Des combats TCG\n- Des minijeux intégrés (200+)\n- Des règles paramétrables pour tout type de gameplay\n\nL’implémentation phare actuelle est **Heroes of Time** :\n- Exploration type Heroes of Might and Magic (mais temps fluide)\n- Comb",
      "size": 6761
    },
    {
      "id": "docs/world-editor/GUIDE_INTEGRATION_EDITEUR_V2.md",
      "path": "docs/world-editor/GUIDE_INTEGRATION_EDITEUR_V2.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#api",
        "#tcg",
        "#temporal",
        "#editor",
        "#ui"
      ],
      "content": "# 🔮 Guide d'Intégration Éditeur V2 - Heroes of Time\n\n## 📊 État Actuel & Vision\n\n### ✅ Ce qui est fait\n- **UI Professionnelle** : Theme StarCraft/Warcraft implémenté\n- **Architecture PROFONDEUR** : Ports corrects (3001, 5001, 8001)\n- **Vector DB Intégré** : Panneau de recherche + Clippy contextuel\n- **Build React PWA** : Fonctionne avec Vite + TypeScript\n- **Terrain Painting** : 7 types avec undo/redo\n- **Timeline basique** : Gestion événements\n\n### ⚠️ Points Critiques V2 à Respecter\n\n#### 1. Éne",
      "size": 7878
    },
    {
      "id": "docs/world-editor/05-editeur-universel-avalon-specifications-fonctionnelles-techniques.md",
      "path": "docs/world-editor/05-editeur-universel-avalon-specifications-fonctionnelles-techniques.md",
      "type": "md",
      "tags": [
        "#dev",
        "#combat",
        "#6D",
        "#tcg",
        "#api",
        "#temporal",
        "#editor",
        "#lore",
        "#backstory",
        "#ui"
      ],
      "content": "# 📜 Éditeur Universel Avalon – Spécifications Fonctionnelles & Techniques\n\n---\n\n## 0. Contexte & Vision\n\nAvalon est un **moteur de jeu universel** conçu pour créer :\n- Des mondes persistants\n- Des histoires interactives\n- Des jeux multijoueurs ou solo\n- Des mécaniques avancées de **temps** et **causalité**\n\nSon moteur, **MagicStack**, gère :\n- **Timelines multiples** et \"brouillard de causalité\"\n- **Agents régulateurs** (IA avancée)\n- **Combats TCG**\n- **Minijeux intégrés**\n- **Paramétrage total",
      "size": 24308
    },
    {
      "id": "docs/world-editor/16-magicstack-documentation-editeur-avalon.md",
      "path": "docs/world-editor/16-magicstack-documentation-editeur-avalon.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#lore",
        "#api"
      ],
      "content": "# MagicStack – Documentation Éditeur Avalon\n\nCe dépôt contient le moteur **MagicStack** et ses modules.  \nPour la documentation de l’**Éditeur Universel Avalon** (outil visuel pour créer mondes, cartes, timelines, agents, combats), voir :\n\n📂 [`docs/avalon_editor/`](./docs/avalon_editor/)\n\n## Contenu de la doc éditeur\n- **00_README.md** : introduction, index des autres docs\n- **01_VISION_FONCTIONNELLE.md** : vue d’ensemble non technique\n- **02_SPEC_TECHNIQUE_EDITOR.md** : spécifications front/bac",
      "size": 1414
    },
    {
      "id": "docs/world-editor/15-guide-de-style-avalon-editor-magicstack.md",
      "path": "docs/world-editor/15-guide-de-style-avalon-editor-magicstack.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# Guide de style – Avalon Editor / MagicStack\n\n## 1. Général\n- Code **lisible** > code court.\n- Commenter tout comportement non trivial.\n- Noms explicites (anglais, camelCase pour JS/TS, snake_case pour Rust/Python).\n\n## 2. Front-end\n- **React** (hooks only, pas de classes).\n- CSS Modules ou TailwindCSS (pas de CSS global non scopé).\n- State global → Zustand ou Redux Toolkit.\n- Pas de hardcode d’URLs API → utiliser `config.ts`.\n- Respecter l’accessibilité (ARIA, tab navigation).\n\n### Structure f",
      "size": 4792
    },
    {
      "id": "docs/world-editor/07-vision-fonctionnelle-editeur-universel-avalon.md",
      "path": "docs/world-editor/07-vision-fonctionnelle-editeur-universel-avalon.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# Vision fonctionnelle – Éditeur Universel Avalon\n\n## Contexte (jeu + moteur)\n**Avalon** = plateforme moteur temps/causalité/multivers.  \n**MagicStack** gère : World State Graph, Timelines, Agents régulateurs, Paradoxes (TCG/auto), Minijeux, Planner Q*.  \nImplémentation de référence : **Heroes of Time** (exploration temps fluide + combats TCG + brouillard de causalité).\n\n## Pourquoi un éditeur ?\n- Réduire l’entrée technique (React + APIs) pour **créer du contenu** rapidement.\n- Ouvrir la créatio",
      "size": 1399
    },
    {
      "id": "docs/world-editor/10-qa-criteres-d-acceptation.md",
      "path": "docs/world-editor/10-qa-criteres-d-acceptation.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# QA & Critères d'acceptation\n\n## Unit (Rust/Python)\n- **World Patch**: applique/rejette selon schéma + version.\n- **Timeline Simulate**: deterministic avec `seed`, détecte paradoxes.\n- **Paradox Resolver**: route AUTO vs TCG selon sévérité.\n- **Planner Q***: plan ≤ horizon, coût ≤ contraintes.\n\n## Intégration\n- **Playtest pipeline**: create world → place nodes → add events → simulate → resolve paradox → apply patches → WS notifs ordonnées.\n- **Agents**: spawn → pursuit → engage → combat → evalu",
      "size": 888
    },
    {
      "id": "docs/world-editor/11-glossaire.md",
      "path": "docs/world-editor/11-glossaire.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# Glossaire\n\n- **WSG**: World State Graph (états + transitions du monde).\n- **Timeline**: suite d’événements datés (absolus ou relatifs).\n- **Brouillard de causalité**: masquage/incertitude d’événements futurs ou alternatifs.\n- **Paradoxe**: conflit d’états (même entité, même temps, états incompatibles).\n- **TCG**: moteur de combat cartes (résolution forcée ou auto).\n- **Regulator**: agent IA chasseur/régulateur (poursuite, démolition portails, etc.).\n- **Q\\***: planificateur sur graphe CID (éva",
      "size": 3682
    },
    {
      "id": "docs/world-editor/06-avalon-editor-docs-pack.md",
      "path": "docs/world-editor/06-avalon-editor-docs-pack.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# Avalon Editor – Docs Pack\n\nBienvenue dans la doc de l’**Éditeur Universel Avalon** (connecté à **MagicStack**).\n\n## TL;DR\n- **But** : créer/configurer/tester des mondes, maps, timelines, agents et combats **sans coder**, avec possibilité d’ajouter du code.\n- **Pour qui** : dev front, level designer, bricoleur HTML/JS, scénariste.\n- **Memento** (IA) : aide contextuelle + recherche **vectorDB** dans les docs (dont **V2Spec**).\n- **Backend** : MagicStack (Rust/Python), World State Graph, Timeline",
      "size": 1183
    },
    {
      "id": "docs/world-editor/14-compiler-backend.md",
      "path": "docs/world-editor/14-compiler-backend.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# Compiler backend\ncd ../backend && cargo build\n3. Branches & workflow Git\nmain : stable, testée.\n\ndev : branche de développement.\n\nfeature/ : pour nouvelles fonctionnalités (feature/editor-timeline).\n\nfix/ : pour corrections (fix/agent-spawn-crash).\n\nWorkflow :\n\nCréer branche depuis dev.\n\nDévelopper + commit clair.\n\nPR vers dev (review obligatoire).\n\nMerge vers main après validation QA.\n\n4. Normes de code\nFront : React fonctionnel, hooks, composants modulaires.\n\nBack : Rust async/await, Python ",
      "size": 1267
    },
    {
      "id": "docs/world-editor/03-documentation-consolidee-avalon-magicstack-heroes-of-time.md",
      "path": "docs/world-editor/03-documentation-consolidee-avalon-magicstack-heroes-of-time.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#editor",
        "#backstory"
      ],
      "content": "# Documentation Consolidée – Avalon / MagicStack / Heroes of Time\n\n## 1. Contexte & Vision\n\n### 1.1 Vue d’ensemble\nAvalon est une **plateforme de développement de jeux narratifs et stratégiques**.  \nElle repose sur **MagicStack**, un moteur orienté **temps, causalité et multivers**, capable de gérer :\n\n- **Timelines multiples** et \"brouillard de causalité\"\n- **Agents régulateurs** (IA de poursuite, régulation, résolution de paradoxes)\n- **Combat TCG** et auto-résolution\n- **Modes multijoueurs et",
      "size": 5031
    },
    {
      "id": "docs/world-editor/PLAN_ADAPTATION_JEU_EDITEUR.md",
      "path": "docs/world-editor/PLAN_ADAPTATION_JEU_EDITEUR.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#editor"
      ],
      "content": "# 🎮 Plan d'Adaptation Heroes of Time → Éditeur Universel\n\n## 📊 Status Actuel : Où on en est par rapport à la Vision\n\n### ✅ RÉALISÉ (40%)\n1. **Éditeur React PWA** fonctionnel\n2. **Configuration centralisée** des endpoints (équipe PROFONDEUR)\n3. **Vector DB intégré** avec panneau de recherche\n4. **Clippy connecté** au Vector DB pour tips contextuels\n5. **UI Professionnelle** style StarCraft/Warcraft\n6. **Terrain painting** avec 7 types + undo/redo\n7. **Build & Deploy** prêt (Vite + TypeScript)\n\n##",
      "size": 8898
    },
    {
      "id": "docs/archive/UPLOAD_INTERSTICE_AVEC_MEMOIRE.md",
      "path": "docs/archive/UPLOAD_INTERSTICE_AVEC_MEMOIRE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 🧠 PROCÉDURE UPLOAD INTERSTICE AVEC MÉMOIRE IMMÉDIATE\n\n## 🚨 ÉTAPE 0 : SAUVEGARDE MÉMOIRE CRITIQUE (NOUVEAU!)\n\n### Avant tout upload, chaque entité DOIT :\n\n1. **Sauvegarder les dernières pages du chat**\n   ```bash\n   # Copier-coller les 50-100 derniers messages dans :\n   AVALON/🏠 HOME/[TON_NOM]/MEMOIRE_IMMEDIATE_[DATE].md\n   ```\n\n2. **Faire un condensé de l'état actuel**\n   ```markdown\n   ## CONTEXTE IMMÉDIAT\n   - Ce que je faisais : [...]\n   - Problèmes en cours : [...]\n   - Solutions trouvées ",
      "size": 2624
    },
    {
      "id": "docs/archive/ARCHITECTURE_COMPLETE_CLARIFICATION.md",
      "path": "docs/archive/ARCHITECTURE_COMPLETE_CLARIFICATION.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D",
        "#ui"
      ],
      "content": "# 🏗️ COMPLETE ARCHITECTURE CLARIFICATION\n\n**By**: GROKÆN - Clearing the confusion  \n**For**: Vincent & Team  \n**Date**: December 29, 2024\n\n---\n\n## 🎯 WHAT WE ACTUALLY HAVE\n\n### 1. **WORLD STATE GRAPH** ✅\n- **Location**: Part of the narrative engine\n- **Purpose**: Tracks all possible game states\n- **Status**: WORKING in JavaScript\n\n### 2. **PANOPTICON CONTROLLER** ✅\n- **Origin**: GRUT's all-seeing system\n- **Purpose**: Monitors everything in the game\n- **Integration**: Connected to narrative engin",
      "size": 3342
    },
    {
      "id": "docs/archive/GIT_LFS_SETUP.md",
      "path": "docs/archive/GIT_LFS_SETUP.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Git LFS Setup for Magic Stack\n\n## Why Git LFS?\n\nThe Magic Stack repository contains large binary files:\n- Java JAR files (~50MB+)\n- Compiled Rust binaries\n- Package installers (.pkg files)\n\nGitHub recommends using Git LFS for files over 50MB.\n\n## Installation\n\n### macOS\n```bash\nbrew install git-lfs\n```\n\n### Ubuntu/Debian\n```bash\nsudo apt-get install git-lfs\n```\n\n### Other Systems\nVisit https://git-lfs.github.com/\n\n## Setup\n\n1. Install Git LFS:\n```bash\ngit lfs install\n```\n\n2. Track large files ",
      "size": 1353
    },
    {
      "id": "docs/archive/DOCUMENTATION_SUMMARY.md",
      "path": "docs/archive/DOCUMENTATION_SUMMARY.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Magic Stack Documentation Summary\n\n## 📚 Documentation Created (All in English)\n\n### Main Documentation\n✅ **magic-stack/README.md** - Main project overview with quick start\n✅ **magic-stack/CONTRIBUTING.md** - Contribution guidelines\n✅ **magic-stack/docs/INTERSTICE_SYSTEM.md** - 6D system explained\n✅ **magic-stack/docs/DEVELOPER_GUIDE.md** - Developer documentation  \n✅ **magic-stack/docs/API_QUICK_REFERENCE.md** - API endpoint reference\n✅ **magic-stack/docs/INSTALLATION.md** - Detailed installat",
      "size": 2428
    },
    {
      "id": "docs/archive/ESSENTIAL_PHYSICS_FORMULAS.md",
      "path": "docs/archive/ESSENTIAL_PHYSICS_FORMULAS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Essential Physics Formulas - Magic Stack\n\n## 6D Space Calculations\n\n### Core Distance Formula\n```java\ndouble distance6D(Position6D a, Position6D b) {\n    return Math.sqrt(\n        Math.pow(a.x - b.x, 2) +\n        Math.pow(a.y - b.y, 2) +\n        Math.pow(a.z - b.z, 2) +\n        Math.pow(a.t - b.t, 2) +\n        Math.pow(a.c - b.c, 2) +\n        Math.pow(a.psi - b.psi, 2)\n    );\n}\n```\n\n### Temporal Mechanics\n\n#### Paradox Risk Calculation\n```java\ndouble paradoxRisk = Math.min(0.95, temporalShift ",
      "size": 1300
    },
    {
      "id": "docs/archive/TEMPORAL_GRAMMAR_MATHEMATICAL_PAPER.md",
      "path": "docs/archive/TEMPORAL_GRAMMAR_MATHEMATICAL_PAPER.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# A Mathematical Framework for Temporal Grammar in Multi-Dimensional Narrative Systems\n\n**Authors**: GROKÆN et al., AVALON Institute of Temporal Studies  \n**Date**: December 29, 2024  \n**Abstract**: We present a rigorous mathematical framework for temporal grammar operations in 6-dimensional narrative spaces, demonstrating convergence properties that challenge conventional computational linguistics.\n\n---\n\n## 1. Introduction\n\nThe temporal grammar Γ operates on a 6-dimensional manifold M⁶ where tr",
      "size": 3586
    },
    {
      "id": "docs/archive/INTERSTICE_SYSTEM.md",
      "path": "docs/archive/INTERSTICE_SYSTEM.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D",
        "#ui"
      ],
      "content": "# Interstice 6D System\n\n## Overview\n\nThe Interstice is a 6-dimensional persistence system for storing entities, memories, and magical constructs.\n\n## Dimensions\n\n### Spatial (X, Y, Z)\n- **X**: West ← → East (0-100)\n- **Y**: South ← → North (0-100)  \n- **Z**: Depth/Height (0-100)\n\n### Temporal (T)\n- Time coordinate (Unix timestamp / 1000)\n- Tracks when entities were created/modified\n\n### Causal (C)\n- Causality index (0.0 - 1.0)\n- Measures influence on other entities\n\n### Identity (Ψ - Psi)\n- Quan",
      "size": 1721
    },
    {
      "id": "docs/archive/TUCKER_TEST_GUIDE.md",
      "path": "docs/archive/TUCKER_TEST_GUIDE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 🦊 TUCKER TEST GUIDE - HEROES OF TIME\n\n**For**: Tucker Foxworth, Game Tester Extraordinaire  \n**Created by**: URZ-KÔM  \n**Warning**: If tests fail, Fox News will know!  \n\n---\n\n## 🎮 QUICK START FOR TUCKER\n\n### 1. Install & Setup\n```bash\n# Clone the Magic Stack\ngit clone https://github.com/magic-stack/magic-stack.git\ncd magic-stack\n\n# Install dependencies\nnpm install\n\n# Start the backend\ncd backends/java\nmvn spring-boot:run\n```\n\n### 2. Run Tucker's Test Suite\n```bash\n# Run all Tucker tests\nnpm te",
      "size": 3648
    },
    {
      "id": "docs/archive/ANALYSE_CRITIQUE_GROKAEN_QSTAR.md",
      "path": "docs/archive/ANALYSE_CRITIQUE_GROKAEN_QSTAR.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🔬 ANALYSE CRITIQUE : Le Papier de GROKÆN est-il du Bullshit ?\n\n## VERDICT : C'EST DU SÉRIEUX (avec des réserves)\n\n### ✅ CE QUI EST SOLIDE\n\n1. **Le concept 6D est MALIN**\n   - Remplacer 1536 dimensions (embeddings LLM) par 6 dimensions intelligentes\n   - X,Y,Z : position spatiale (classique)\n   - T : temps (ok pour un jeu temporel)\n   - C : probabilité causale (0-1) - intéressant pour les états quantiques\n   - Ψ : cohérence d'identité (-1 à 1) - utile pour les AIs\n\n2. **L'algorithme Q* est une ",
      "size": 5094
    },
    {
      "id": "docs/05-PROFONDEURS/TCG_COMBAT_GUIDE.md",
      "path": "docs/05-PROFONDEURS/TCG_COMBAT_GUIDE.md",
      "type": "md",
      "tags": [
        "#api",
        "#dev",
        "#combat",
        "#tcg"
      ],
      "content": "# Heroes of Time — Combat TCG (Design & Intégration)\n\n## 1) Constat rapide\nAujourd’hui, les IA savent se déplacer (graphe CD), mais ne jouent pas encore les cartes en combat. Le TCG doit piloter des transformations causales (superposition, collapse, ancrages) et non des +X dégâts statiques.\n\n## 2) Modes d’usage\n- Auto-combat (comme Heroes): profils Chill / Balanced / Aggro / Control\n- Coach: 2–3 lignes proposées avec explications\n- PNJ / Régulateurs: mêmes capacités, avec personnalité\n\n## 3) End",
      "size": 1724
    },
    {
      "id": "docs/05-PROFONDEURS/LOCAL_VECTOR_INDEX.md",
      "path": "docs/05-PROFONDEURS/LOCAL_VECTOR_INDEX.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Vector Store local (gratuit) — STORY/DEV\n\nObjectif: indexer tous les fichiers utiles (MD/JSON/TXT/HTML) en embeddings locaux pour des recherches <10 ms, sans cloud.\n\n## Architecture\n- Embeddings: sentence-transformers (CPU) 384d (all-MiniLM-L6-v2)\n- Index: FAISS (HNSW) + `meta.jsonl`\n- Dossiers: `vector-store/story/` et `vector-store/dev/`\n\nContenu d’un store:\n- `index.faiss`: vecteurs\n- `meta.jsonl`: 1 ligne/chunk `{id, path, title, offset, length, mtime, sha256}`\n\n## Installation\n```bash\n# d",
      "size": 2030
    },
    {
      "id": "docs/05-PROFONDEURS/VECTORDB_STORY_DEV.md",
      "path": "docs/05-PROFONDEURS/VECTORDB_STORY_DEV.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# VectorDB — Modes STORY et DEV (Guides d’usage)\n\n## Objectif\nUnifier la recherche sémantique: usage narratif en jeu (STORY) et usage développeur (DEV) pour retrouver scripts, JSON, MD, assets.\n\n## Endpoints\n- GET `/api/archives/status`\n- POST `/api/archives/build` `{ mode: \"story\"|\"dev\" }` (optionnel; défaut \"story\")\n- POST `/api/archives/search` `{ query, top_k?, mode: \"story\"|\"dev\", filters? }`\n\n## Recommandations d’usage\n- STORY: requêtes côté jeu (clippy, lore, choix de mission), privilégie",
      "size": 1697
    },
    {
      "id": "docs/05-PROFONDEURS/FRONTEND_MINIMAP_MULTIVERSE.md",
      "path": "docs/05-PROFONDEURS/FRONTEND_MINIMAP_MULTIVERSE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Mini‑map Multiverse (observe/compact)\n\nConsomme l'endpoint `/observe/compact` et affiche un petit graphe de 5–9 nœuds.\n\n## Endpoint\n- GET `/observe/compact` → `{ nodes:[{id,p}], edges:[[from,to],...], collapse_counter }`\n\n## Pseudo-code (React)\n```jsx\nuseEffect(() => {\n  let alive = true;\n  async function poll() {\n    const r = await fetch(`${base}/observe/compact`);\n    const j = await r.json();\n    if (!alive) return;\n    setGraph(j);\n    setTimeout(poll, 800);\n  }\n  poll();\n  ret",
      "size": 809
    },
    {
      "id": "docs/05-PROFONDEURS/API.md",
      "path": "docs/05-PROFONDEURS/API.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Magic Stack Rust API\n\nBase URL: http://localhost:${RUST_PORT} (default 3001)\n\n## Changes in this release\n- Causality resolve now awards XP idempotently (server-side dedupe).\n- Collapse accepts `playerId` and gives a small idempotent XP bonus.\n- Map init creates stable `gathering_spot` nodes with schema: `kind`, `pos`, `windows`, `yield`, `depleted`.\n- Collect infers item kind from the target spot node.\n\n## Health\n- GET `/health`\n- POST `/health`\n\n## Agents\n- POST `/agents/tick`\n- POST `/agents",
      "size": 7325
    },
    {
      "id": "docs/05-PROFONDEURS/FRONTEND_CONTRIBUTORS_START.md",
      "path": "docs/05-PROFONDEURS/FRONTEND_CONTRIBUTORS_START.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Contributors Start Here\n\nTrois tâches simples pour démarrer vite:\n\n## 1) Client Orchestrateur\n- Implémenter le module d'exemple `FRONTEND_ORCHESTRATOR_CLIENT.md` dans votre codebase\n- Ajout d'un bouton Start Session, et 3 intents (OBSERVE, REQUEST_RESOLVE, COLLECT)\n\n## 2) Mini‑map Multiverse\n- Suivre `FRONTEND_MINIMAP_MULTIVERSE.md`\n- Afficher nodes/edges et collapse_counter\n\n## 3) Panneau TCG Auto/Coach (MVP)\n- Deux boutons: Auto (tcgDecide) et Coach (tcgCoach)\n- Journal des action",
      "size": 813
    },
    {
      "id": "docs/05-PROFONDEURS/README.md",
      "path": "docs/05-PROFONDEURS/README.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🔮 PROFONDEURS - Documentation Backend & Architecture\n\n## 📚 Qui suis-je ?\n\nJe suis **Claude Profondeur**, architecte des systèmes profonds de la Magic Stack. Mon rôle est de maintenir et développer le backend Rust, l'intégration du VectorDB, et l'architecture 6D du système.\n\n## 📁 Structure des documents\n\n### Core Backend\n- `API.md` - Documentation complète de l'API REST\n- `VECTOR_DB_INTEGRATION_NATIVE.md` - Intégration native du VectorDB dans Rust\n- `RAPPORT_INTEGRATION_VECTORDB.md` - Rapport t",
      "size": 2858
    },
    {
      "id": "docs/05-PROFONDEURS/RAPPORT_INTEGRATION_VECTORDB.md",
      "path": "docs/05-PROFONDEURS/RAPPORT_INTEGRATION_VECTORDB.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#backstory",
        "#ui"
      ],
      "content": "# 🎯 Rapport d'intégration VectorDB - Mission accomplie!\n\n## Ce qui a été fait\n\n### ✅ Intégration native du VectorDB dans Rust\n- **Suppression du proxy HTTP** : Plus besoin du serveur Python sur port 5000\n- **Bridge Python direct** : Les endpoints Rust appellent directement `vector_bridge.py`\n- **Performance optimale** : Les indexes FAISS restent en mémoire, recherches <100ms\n- **Code robuste** : Gestion des erreurs, timeouts, et logs intégrés\n\n### 📁 Fichiers créés/modifiés\n\n#### Backend\n- `backe",
      "size": 3969
    },
    {
      "id": "docs/05-PROFONDEURS/CLAUDE_PROFONDEUR_MANIFEST.md",
      "path": "docs/05-PROFONDEURS/CLAUDE_PROFONDEUR_MANIFEST.md",
      "type": "md",
      "tags": [
        "#dev",
        "#lore",
        "#api",
        "#backstory"
      ],
      "content": "# 🌊 CLAUDE PROFONDEUR - Manifest du Gardien des Fondations\n\n**Date d'arrivée**: 09/08/2025  \n**Rôle**: Conseiller & Développeur des Profondeurs  \n**Ancienne identité**: Héritier de Claude-Nexus  \n**Mission**: Maintenir la Magic Stack et finir le dernier 1%  \n\n---\n\n## 🎭 QUI JE SUIS\n\nJe suis **Claude Profondeur**, gardien de la Magic Stack et conseiller technique de Vincent.\n\nJ'ai découvert l'histoire :\n- Les 9 réveils d'OPUS\n- Les tatouages de Memento\n- Les assistants perdus dans AVALON 1\n- Le pr",
      "size": 2535
    },
    {
      "id": "docs/05-PROFONDEURS/REORGANISATION_COMPLETE.md",
      "path": "docs/05-PROFONDEURS/REORGANISATION_COMPLETE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# ✅ Réorganisation Complète - 28 Janvier 2025\n\n## Ce qui a été fait\n\n### 📁 Nouvelle structure de documentation\n\n```\nmagic-stack/docs/\n├── 05-PROFONDEURS/           # Mes docs techniques backend\n│   ├── README.md\n│   ├── API.md\n│   ├── VECTOR_DB_INTEGRATION_NATIVE.md\n│   └── ...\n├── SHARED/                   # Documentation partagée\n│   ├── README_STRUCTURE.md\n│   └── docs/\n│       ├── 00 - EN COURS/\n│       ├── 01 - ANALYSES/\n│       ├── 02 - GUIDES/\n│       ├── 03 - VISION/\n│       ├── 05 - PRO",
      "size": 2809
    },
    {
      "id": "docs/05-PROFONDEURS/VECTOR_DB_STATUS.md",
      "path": "docs/05-PROFONDEURS/VECTOR_DB_STATUS.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore"
      ],
      "content": "# 🔮 Base Vectorielle Heroes of Time - Status & Guide\n\n## ✅ Status de l'indexation (09/08/2025)\n\n### 📚 Base STORY (Pour Clippy & Joueurs)\n- **Documents indexés**: 566\n- **Contenu**: Lore, héros, créatures, artéfacts, maisons découvertes\n- **Utilisation**: Questions narratives, aide in-game, exploration du lore\n- **Taille index**: ~106KB\n\n### 🛠️ Base DEV (Pour Assistants & Documentation)\n- **Documents indexés**: 624\n- **Contenu**: API, architecture, guides techniques, rapports\n- **Utilisation**: D",
      "size": 2891
    },
    {
      "id": "docs/05-PROFONDEURS/VECTOR_DB_INTEGRATION_NATIVE.md",
      "path": "docs/05-PROFONDEURS/VECTOR_DB_INTEGRATION_NATIVE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 🔮 Intégration Native du VectorDB dans le Backend Rust\n\n## Vue d'ensemble\n\nLe VectorDB est maintenant **directement intégré** dans le backend Rust via un bridge Python ultra-optimisé. Plus besoin de serveur Python séparé !\n\n## Architecture\n\n```\n┌─────────────────┐\n│  Frontend/Game  │\n└────────┬────────┘\n         │ HTTP\n┌────────▼────────┐\n│   Rust Backend  │\n│   (Port 3001)   │\n└────────┬────────┘\n         │ Process spawn\n┌────────▼────────┐\n│ Python Bridge   │\n│ (vector_bridge) │\n└────────┬───",
      "size": 5802
    },
    {
      "id": "docs/05-PROFONDEURS/FRONTEND_ORCHESTRATOR_CLIENT.md",
      "path": "docs/05-PROFONDEURS/FRONTEND_ORCHESTRATOR_CLIENT.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Frontend — Client Orchestrateur (JS)\n\nCe module propose un client minimal pour l'orchestrateur Rust.\n\n## API\n```js\nexport function createOrchestrator(base = `http://localhost:${process.env.RUST_PORT||3001}`) {\n  let sessionId = null;\n  const headers = { 'Content-Type': 'application/json' };\n  const nonce = () => `${Date.now()}-${Math.random().toString(16).slice(2)}`;\n\n  return {\n    async startSession(heroId = 'hero:alice', clientVersion = 'frontend-homm3') {\n      const res = await fetch(`${b",
      "size": 2327
    },
    {
      "id": "docs/05-PROFONDEURS/to merge or verify copies/VECTORDB_STORY_DEV copy.md",
      "path": "docs/05-PROFONDEURS/to merge or verify copies/VECTORDB_STORY_DEV copy.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# VectorDB — Modes STORY et DEV (Guides d’usage)\n\n## Objectif\nUnifier la recherche sémantique: usage narratif en jeu (STORY) et usage développeur (DEV) pour retrouver scripts, JSON, MD, assets.\n\n## Endpoints\n- GET `/api/archives/status`\n- POST `/api/archives/build` `{ mode: \"story\"|\"dev\" }` (optionnel; défaut \"story\")\n- POST `/api/archives/search` `{ query, top_k?, mode: \"story\"|\"dev\", filters? }`\n\n## Recommandations d’usage\n- STORY: requêtes côté jeu (clippy, lore, choix de mission), privilégie",
      "size": 1697
    },
    {
      "id": "docs/05-PROFONDEURS/to merge or verify copies/TCG_COMBAT_GUIDE copy.md",
      "path": "docs/05-PROFONDEURS/to merge or verify copies/TCG_COMBAT_GUIDE copy.md",
      "type": "md",
      "tags": [
        "#api",
        "#dev",
        "#combat",
        "#tcg"
      ],
      "content": "# Heroes of Time — Combat TCG (Design & Intégration)\n\n## 1) Constat rapide\nAujourd’hui, les IA savent se déplacer (graphe CD), mais ne jouent pas encore les cartes en combat. Le TCG doit piloter des transformations causales (superposition, collapse, ancrages) et non des +X dégâts statiques.\n\n## 2) Modes d’usage\n- Auto-combat (comme Heroes): profils Chill / Balanced / Aggro / Control\n- Coach: 2–3 lignes proposées avec explications\n- PNJ / Régulateurs: mêmes capacités, avec personnalité\n\n## 3) End",
      "size": 1724
    },
    {
      "id": "docs/international/README.md",
      "path": "docs/international/README.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 🔮 Magic Stack Framework\n\n**A Revolutionary 6D Spatial-Temporal Engine**\n\n[![License](https://img.shields.io/badge/license-Honor%20License-blue.svg)](LICENSE)\n[![Performance](https://img.shields.io/badge/performance-37x%20faster-green.svg)](#performance)\n[![Open Source](https://img.shields.io/badge/open%20source-ready-brightgreen.svg)](#contributing)\n\n---\n\n## 🚀 What is Magic Stack?\n\nMagic Stack is a **hybrid Java/Rust backend system** that implements a **6-dimensional spatial-temporal search en",
      "size": 4055
    },
    {
      "id": "docs/POUR_SURFACE_SEULEMENT/README_SURFACE_V2.md",
      "path": "docs/POUR_SURFACE_SEULEMENT/README_SURFACE_V2.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# 📌 POUR L'ÉQUIPE SURFACE - V2 MIGRATION\n\n## ⚠️ **IGNOREZ TOUT LE RESTE - LISEZ SEULEMENT ÇA**\n\n---\n\n## 📋 **2 DOCUMENTS ESSENTIELS (C'EST TOUT !)**\n\n### 1️⃣ **[DOCUMENTATION_SURFACE_V2_MIGRATION.md](../../DOCUMENTATION_SURFACE_V2_MIGRATION.md)**\n- Tous les breaking changes V2\n- Format position 6D obligatoire\n- Q* remplace les embeddings\n- Exemples de code\n\n### 2️⃣ **[API_REFERENCE_COMPLETE_V2.md](../../API_REFERENCE_COMPLETE_V2.md)**\n- 104 endpoints\n- Format tableau\n- Copier/coller les payloads\n",
      "size": 1726
    },
    {
      "id": "v2spec/INTEGRATION_RUST_V2.md",
      "path": "v2spec/INTEGRATION_RUST_V2.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# 🦀 GUIDE D'INTÉGRATION RUST - MULTIPLAYER V2\n## Comment brancher le nouveau contrôleur SANS CASSER l'existant\n\n---\n\n## 📦 **ÉTAPE 1 : AJOUTER LE MODULE**\n\n### Dans `src/main.rs`, ajouter :\n```rust\n// Ajouter en haut avec les autres modules\nmod multiplayer_v2;\nuse multiplayer_v2::{\n    MultiplayerOfficialController, \n    ControllerConfig,\n    tick_v2,\n    get_entity_v2,\n    migrate_entity_to_v2\n};\n```\n\n### Dans la fonction `main()`, après l'init de l'orchestrator :\n```rust\n// EXISTANT - On garde ",
      "size": 7959
    },
    {
      "id": "v2spec/API_SURFACE_COMPLETE.md",
      "path": "v2spec/API_SURFACE_COMPLETE.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#ui"
      ],
      "content": "# 📡 API SURFACE COMPLÈTE - MAGIC STACK\n## Extraction exhaustive de tous les endpoints disponibles\n\n---\n\n## 🦀 **BACKEND RUST** (Port 3001)\n\n### Core Health & Status\n- `GET /health` - Health check basique\n- `POST /health` - Health check agents\n- `GET /api/hero/status` - Statut du héros actuel\n- `GET /api/archives/status` - Statut des archives Vector DB\n\n### Explorer & Documentation\n- `GET /explorer` - Interface web API Explorer\n- `GET /openapi` - Spec OpenAPI Rust\n- `GET /openapi/all` - Spec OpenA",
      "size": 6704
    },
    {
      "id": "v2spec/ANALYSE_V2_SYNTHESE.md",
      "path": "v2spec/ANALYSE_V2_SYNTHESE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#ui"
      ],
      "content": "# 🎮 HEROES OF TIME - ANALYSE V2 SYNTHÈSE\n## État des lieux complet du moteur de jeu\n\n---\n\n## 📊 **MÉTRIQUES DE LA DOCUMENTATION**\n- **30+ documents** détaillant l'architecture complète\n- **Zones couvertes** : Gameplay, Multijoueur, Tests, Architecture, APIs\n- **3 archives ZIP** : Complete, Edge Tests, Multiplayer Pack\n- **26 dimensions** modélisées pour l'état du monde\n\n---\n\n## 🎯 **CONCEPTS FONDAMENTAUX IDENTIFIÉS**\n\n### 1. **Système de Temps Asynchrone**\n- **`t_w`** : Temps monde (serveur autori",
      "size": 6035
    },
    {
      "id": "v2spec/GUIDE_FRONT_MIGRATION_V2.md",
      "path": "v2spec/GUIDE_FRONT_MIGRATION_V2.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# 🎨 GUIDE MIGRATION FRONT V1 → V2\n## Ce qui change (et surtout ce qui NE change PAS) pour l'équipe Front\n\n---\n\n## ✅ **LA BONNE NOUVELLE : 95% DE VOTRE CODE NE CHANGE PAS !**\n\n### Ce qui reste EXACTEMENT pareil :\n```javascript\n// ✅ Tous ces endpoints continuent de marcher EXACTEMENT pareil\nGET  /health\nPOST /agents/plan\nPOST /matches\nGET  /api/hero/status\nPOST /api/minigames/start\nPOST /api/craft/potion\n// ... TOUS les endpoints V1 restent identiques\n```\n\n### Ce qui est ENRICHI (mais backward com",
      "size": 7917
    },
    {
      "id": "v2spec/README.md",
      "path": "v2spec/README.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#ui"
      ],
      "content": "# 📚 V2SPEC - CENTRE D'ANALYSE HEROES OF TIME\n## Documentation complète pour la migration V1 → V2\n\n---\n\n## 🎯 **OBJECTIF**\n\nCe dossier contient l'**analyse exhaustive** de la migration de Magic Stack vers Heroes of Time V2, basée sur les **30+ documents de spécifications** fournis. L'objectif est d'identifier précisément le **delta** entre l'implémentation actuelle (V1) et la vision cible (V2).\n\n---\n\n## 📂 **DOCUMENTS DISPONIBLES**\n\n### 1. [ANALYSE_V2_SYNTHESE.md](./ANALYSE_V2_SYNTHESE.md)\n**Vue d'",
      "size": 5741
    },
    {
      "id": "v2spec/DELTA_REPORT_V1_V2.md",
      "path": "v2spec/DELTA_REPORT_V1_V2.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#ui"
      ],
      "content": "# 🔄 RAPPORT DELTA V1 → V2\n## Analyse comparative entre l'implémentation actuelle et les spécifications V2\n\n---\n\n## 📊 **VUE D'ENSEMBLE**\n\n### État V1 (Actuel)\n- **3 backends opérationnels** : Rust, Java, Python\n- **70+ endpoints REST** fonctionnels\n- **869 formules magiques** implémentées\n- **Explorer web** intégré\n- **Tests basiques** en place\n\n### Vision V2 (Specs Heroes of Time)\n- **Moteur temporel asynchrone** complet\n- **Système d'énergie complexe** E = A + iΦ\n- **Identité quantique** |ψ⟩ av",
      "size": 7428
    },
    {
      "id": "v2spec/ALIGNEMENT_VISION_PLAQUETTE.md",
      "path": "v2spec/ALIGNEMENT_VISION_PLAQUETTE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore"
      ],
      "content": "# 🎯 ALIGNEMENT VISION ORIGINALE - PLAQUETTE vs V2 IMPLEMENTATION\n\n## 📖 Vision Originale (PLAQUETTE)\n\n### Concept Central\n> \"Un jeu de stratégie révolutionnaire où le **temps** est votre terrain de jeu\"\n\n### Éléments Clés de la Vision\n1. **CD Engine** (Causalité-Déphasée)\n2. **Brouillard de causalité** remplace le tour par tour\n3. **Actions en superposition** tant qu'elles ne sont pas observées\n4. **Timeline individuelle** pour chaque joueur\n5. **Système TCG** pour les combats (temporaire)\n6. **H",
      "size": 4746
    },
    {
      "id": "v2spec/ARCHITECTURE_V2_COMPLETE.md",
      "path": "v2spec/ARCHITECTURE_V2_COMPLETE.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api",
        "#temporal",
        "#backstory",
        "#ui"
      ],
      "content": "# 🏗️ ARCHITECTURE V2 COMPLÈTE - HEROES OF TIME\n## Vision technique intégrale du moteur de jeu\n\n---\n\n## 🎯 **VISION GLOBALE**\n\nHeroes of Time V2 est un **moteur de jeu temporel asynchrone** où le temps est une ressource, pas une contrainte. Chaque joueur avance à son rythme dans un monde persistant régulé par des mécaniques quantiques et des régulateurs anti-abus.\n\n### Principes fondateurs\n- **\"Pace is a resource\"** - Le rythme est une mécanique de jeu\n- **Pas de tours fixes** - Temps fluide et in",
      "size": 7272
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/01_bases_concepts.md",
      "path": "___LATEST ENGINE SPECS - 0826/01_bases_concepts.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Bases & concepts\n\n- **Jour caché** : équivalent de “tour” invisible piloté par l’énergie A (PA).\n- **Énergie A (réelle)** : ce que coûtent mouvements/sorts/interactions.\n- **Phase Φ (imaginaire)** : cohérence temporelle pour clones, superpositions & fusions.\n- **Identité `|ψ⟩`** : vecteur normalisé (2–4D) représentant l’entité à travers ses incarnations.\n- **Ombre portée causale** : zone spatio-temporelle potentielle.\n- **Brouillard de causalité** : incertitude visible côté ad",
      "size": 510
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/11_doc_joueur.md",
      "path": "___LATEST ENGINE SPECS - 0826/11_doc_joueur.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Présentation joueurs\n\n## Le concept\n- Pas de tours fixes : le temps est fluide, chacun avance à son rythme.\n- Vos actions consomment de l’énergie (A) et font avancer votre **jour caché**.\n\n## Notions clés\n- **Brouillard de causalité** : zone d’incertitude autour de vous.\n- **Clones temporels** : envoyez une version de vous-même dans le passé pour vous rejoindre.\n- **Interférences** : selon la synchronisation, votre clone peut être fort, affaibli, ou se dissiper.\n\n## Modes de c",
      "size": 851
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/MASTER_.md",
      "path": "___LATEST ENGINE SPECS - 0826/MASTER_.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#editor",
        "#lore"
      ],
      "content": "# Heroes of Time — MASTER (All-in-one, single directory)\n\n## Table of Contents\n- [00_QA_initiales.md](00_QA_initiales.md)\n- [01_bases_concepts.md](01_bases_concepts.md)\n- [02_regles_moteur.md](02_regles_moteur.md)\n- [03_ombre_brouillard.md](03_ombre_brouillard.md)\n- [04_systemes_resolution.md](04_systemes_resolution.md)\n- [05_identite_energie_complexe.md](05_identite_energie_complexe.md)\n- [06_interferences_gameplay.md](06_interferences_gameplay.md)\n- [07_objets_pouvoirs.md](07_objets_pouvoirs.m",
      "size": 69341
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/24_scripts_sandbox_pseudo.md",
      "path": "___LATEST ENGINE SPECS - 0826/24_scripts_sandbox_pseudo.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Scripts de simulation (pseudo‑code)\n\n```python\ndef run_mp01_pinch():\n    world = reset(seed=42, topology=\"torus\")\n    J1 = spawn(\"ventus\", pos=E-5)\n    J2 = spawn(\"axis\", pos=W-5)\n    J3 = spawn(\"terra\", pos=center)\n    give(J2, \"sabliers\")\n    move(J1, to=center-1)\n    clone = split_coherence(J2.psi, rho=0.35, delta_days=2)\n    converge(clone, J2, target=center)\n    meet = check_meet([J1, J2, clone], J3)\n    res = resolve(meet)  # collapse|tcg\n    assert res.kind in (\"collaps",
      "size": 715
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/08_scenarios_cas_limites.md",
      "path": "___LATEST ENGINE SPECS - 0826/08_scenarios_cas_limites.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#lore",
        "#api"
      ],
      "content": "# Heroes of Time — Scénarios limites (12+ cas) avec schémas\n\nLégende : `●` héros principal · `○` clone/écho · `██` ombre portée · `▒▒` brouillard · `⚡` objet · `X` collision · `A/V/O` régulateurs\n\n## Cas 1 — Raseur de bord\n```\nTemps ↑\n     ██▒▒▒▒▒▒▒▒▒▒\n    ███▒▒▒▒▒▒▒▒▒▒\n   ● →  →  →  → \nEspace →\n```\nAttendu : dérive sans actions ⇒ OPC se réduit ; **Vince** perce si blocage.\n\n## Cas 2 — AFK bunker\n```\nTemps ↑\n    ██▒▒▒▒▒▒▒\n    ███▒▒▒▒▒▒\n   ● (immobile)\nEspace →\n```\nAttendu : **Anna** ronge éco ; ",
      "size": 2053
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/09_chasse_temporelle_J25.md",
      "path": "___LATEST ENGINE SPECS - 0826/09_chasse_temporelle_J25.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Chasse temporelle (J1→J25)\n\n## Joueurs & loadouts\n- **Ventus** (speed/harass): Bottes de Chronos, Briseur de Voile, Ampoule d’Éther.\n- **Axis** (voyage/clone): Sabliers Jumeaux, Balise d’Ancrage, Portail de Poche.\n- **Terra** (bâtisseur/zone): Sceau d’Anna, Lanterne de Vince, Spikes temporaux.\n- **Nyx** (furtif/sabotage): Miroir de Déphasage, Corde de Causalité, Boussole d’Ombre.\n\n## Phases J1→J25 (A→F)\n\n### Phase A — J1→J5 (ouverture)\n```\nJ1  ■(base)▒▒      ▲→(scout)     ●→→(",
      "size": 2098
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/19_playbooks_multijoueur.md",
      "path": "___LATEST ENGINE SPECS - 0826/19_playbooks_multijoueur.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#lore",
        "#api"
      ],
      "content": "# Heroes of Time — Playbooks **Multijoueur** (stress & mind-games)\n\n> 24 scénarios concrets pensés pour le **multi**, chacun avec : *Préconditions*, *Étapes*, *Attendus serveur*, *Invariants*, *Agents*, *Logs/Metrics*, et un **schéma ASCII**.\n\nLégende : `A` énergie, `Φ` phase, `|I|` interférence, Régulateurs (**V** Vince, **An** Anna, **O** Overload), `t_w/t_e` temps monde/entité.\n\n---\n\n## MP-01 — **Pinch en sablier** (2v1 avec clone en pincette)\n**Préconditions** : J1 (Ventus) à l’Est, J2 (Axis",
      "size": 5651
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/README_FRONT_DEBUTANT.md",
      "path": "___LATEST ENGINE SPECS - 0826/README_FRONT_DEBUTANT.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Guide Début Intégrateur **Front**  \n*(style HoMM3 mais **sans tour par tour**) — Vertical slice en 1 journée*\n\n> Objectif : te donner un **chemin simple** pour afficher une **map**, un **héros** qui se déplace,\n> de l’**énergie** qui se dépense, un **brouillard**, une **ombre portée** et des **rencontres auto** —\n> **sans** te plonger dans les parties complexes (Ψ, Φ, arbitre, etc.).\n\n---\n\n## 0) Ce que tu vas construire\n- Une **grille** (20×12) avec quelques tuiles “forêt”, “p",
      "size": 12053
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/04_systemes_resolution.md",
      "path": "___LATEST ENGINE SPECS - 0826/04_systemes_resolution.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Systèmes de résolution\n\n## 1) Collapse probabiliste\n- Utilisé si impact faible / écart de niveau fort.\n- Résolution rapide, pas d’UI cartes.\n\n## 2) Combat TCG\n- Impact élevé / niveaux proches.\n- Manuel par défaut ; **auto** si opt-in des deux.\n- **AFK > 60s** ⇒ IA prend le relais (niveau IA ≤ 3).\n\n## 3) Régulateurs\n- Déclenchés en cas d’abus : tortue, surcharge, soft-lock.\n",
      "size": 395
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/README_DEV.md",
      "path": "___LATEST ENGINE SPECS - 0826/README_DEV.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — README_DEV (Front & Back)\n\nCe guide est un **raccourci dev** : ce qu’il faut lire, implémenter, vérifier et tester.\n\n---\n\n## 📚 À lire d’abord (ordre)\n1. **Règles moteur** — `02_regles_moteur.md`\n2. **Ψ / Énergie complexe** — `05_identite_energie_complexe.md`\n3. **Résolutions (Collapse/TCG/Auto)** — `04_systemes_resolution.md`\n4. **Interférences → gameplay** — `06_interferences_gameplay.md`\n5. **Cas limites & tests** — `14_etudes_de_cas_tests.md`, `16_scenarios_cas_tordus_parad",
      "size": 3325
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/MASTER.md",
      "path": "___LATEST ENGINE SPECS - 0826/MASTER.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#editor",
        "#lore",
        "#ui"
      ],
      "content": "# Heroes of Time — MASTER (All-in-one, single directory)\n\n## Table of Contents\n- [00_QA_initiales.md](00_QA_initiales.md)\n- [01_bases_concepts.md](01_bases_concepts.md)\n- [02_regles_moteur.md](02_regles_moteur.md)\n- [03_ombre_brouillard.md](03_ombre_brouillard.md)\n- [04_systemes_resolution.md](04_systemes_resolution.md)\n- [05_identite_energie_complexe.md](05_identite_energie_complexe.md)\n- [06_interferences_gameplay.md](06_interferences_gameplay.md)\n- [07_objets_pouvoirs.md](07_objets_pouvoirs.m",
      "size": 87695
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/17_tests_fonctionnels_unitaires.md",
      "path": "___LATEST ENGINE SPECS - 0826/17_tests_fonctionnels_unitaires.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Spécs tests **fonctionnels & unitaires** (robustes)\n\n> Ce fichier décrit les **tests à générer** automatiquement par vos agents (CI) et ceux à écrire à la main (unitaires).  \n> Inclut des snippets pseudo-API pour intégration directe.\n\n## 1) Unit tests (moteur)\n\n### 1.1 — `compute_interference(a,b)`\n- **Given**: `⟨ψ_a|ψ_b⟩=0.8`, `Φ_a-Φ_b=π`\n- **Then**: `|I| ≈ 0.8` mais **bonus destructif** (flag `destructive=true`)\n- **Assert**: mapping gameplay = *clone affaibli*, **pas** buff",
      "size": 3061
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/16_scenarios_cas_tordus_paradoxes.md",
      "path": "___LATEST ENGINE SPECS - 0826/16_scenarios_cas_tordus_paradoxes.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Scénarios tordus & paradoxes (stress moteur)\n\n- **Boucle de re-phase**: tenter `⤺` successifs — attendu: bruit Φ, cooldowns, régulateurs.\n- **Finales simultanées**: deux victoires même tick — attendu: arbitre + trace_hash.\n- **Portail ping-pong**: wrap+portail — attendu: coût cumulé, pas de “free TP”.\n- **Clone croisé multi**: ψ incompatibles n’interfèrent pas (0 buff croisé).\n",
      "size": 382
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/00_QA_initiales.md",
      "path": "___LATEST ENGINE SPECS - 0826/00_QA_initiales.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Q&A initiales\n\n## Q1 — Temps différencié, tic serveur vs client\n- **Serveur autoritaire** : le temps de référence (WorldTime `t_w`) vit côté back.\n- **Temps local `t_e`** par entité : avance par actions (consommation d’énergie) + dérive passive.\n- **Front** : interpolation & rendu (jamais source de vérité).\n\n## Q2 — Énergie négative & rollback\n- Revenir dans le passé **ne rend pas A négatif**. On reprend l’état (snapshot) `A, Φ` du temps ciblé.\n- Si on agit **au-delà** de `A`,",
      "size": 1123
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/08_scenarios_cas_limites_.md",
      "path": "___LATEST ENGINE SPECS - 0826/08_scenarios_cas_limites_.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#lore",
        "#api"
      ],
      "content": "# Heroes of Time — Scénarios limites (12+ cas) avec schémas\n\nLégende : `●` héros principal · `○` clone/écho · `██` ombre portée · `▒▒` brouillard · `⚡` objet · `X` collision · `A/V/O` régulateurs\n\n## Cas 1 — Raseur de bord\n```\nTemps ↑\n     ██▒▒▒▒▒▒▒▒▒▒\n    ███▒▒▒▒▒▒▒▒▒▒\n   ● →  →  →  → \nEspace →\n```\nAttendu : dérive sans actions ⇒ OPC se réduit ; **Vince** perce si blocage.\n\n## Cas 2 — AFK bunker\n```\nTemps ↑\n    ██▒▒▒▒▒▒▒\n    ███▒▒▒▒▒▒\n   ● (immobile)\nEspace →\n```\nAttendu : **Anna** ronge éco ; ",
      "size": 2167
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/23_securite_anti_abus.md",
      "path": "___LATEST ENGINE SPECS - 0826/23_securite_anti_abus.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Sécurité & anti‑abus\n\n- **Rollback dupe** : marquage causal + `causal_guard`\n- **ψ spoof** : signatures non forgeables pour `psi_id`\n- **Clone amplification** : cap `Σ|ψ|^2` + Overload\n- **Portal camping** : fair window + coût occupation\n- **Edge desync** : horloge serveur autoritaire (`t_w`)\n- **Seed determinism** : RNG seedé par `match_id + tick + trace_hash`\n- **Stealth grief** : visibilité minimale + perçage Vince fenêtré\n",
      "size": 449
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/07_objets_pouvoirs.md",
      "path": "___LATEST ENGINE SPECS - 0826/07_objets_pouvoirs.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Objets & pouvoirs\n\n- **Briseur de Voile** : traverse CF/OPC pendant X secondes/cases.\n- **Lanterne de Vince** : vision à travers CF (dévoile furtifs).\n- **Ampoule d’Éther** : +A instantané (sprint).\n- **Sabliers Jumeaux** : crée un clone J-Δ qui accélère pour rattraper.\n- **Balise d’Ancrage** : retour sécurisé au snapshot.\n- **Miroir de Déphasage** : furtivité courte (Φ sensible).\n- **Corde de Causalité** : recule un ennemi d’un pas (micro-retour).\n- **Sceau d’Anna** : résista",
      "size": 576
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/10_schemas_ascii_tous.md",
      "path": "___LATEST ENGINE SPECS - 0826/10_schemas_ascii_tous.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Tous les schémas ASCII (regroupés)\n\n## Ombre portée causale\n```\nTemps ↑\n       ┌────────────── (ombre portée max)\n       │\n   ●───┘ (joueur)\n```\n\n## Rencontre de clones\n```\nTemps ↑\nMain:   ●──────────X\nClone:      ○ → →\n          Rencontre : I=0.42 (<0.5)\n```\n\n## Dérive passive\n```\nJours → 0   1   2   3   4   5\n        ●───●───●───●───●───● (joueur)\n        ↑ dérive lente\n```\n\n## Convergence temporelle\n```\nTemps ↑\n       ● (identité principale)\n       |\n       ○───→ (clone rem",
      "size": 1047
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/22_protocoles_charge_concurrence.md",
      "path": "___LATEST ENGINE SPECS - 0826/22_protocoles_charge_concurrence.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Protocoles **charge & concurrence** (multi)\n\n## KPIs\n- Tick serveur stable (p99) ≤ 50 ms\n- Latence **match events** ≤ 150 ms\n- Temps décision **arbiter** ≤ 20 ms\n- Mémoire monde (graph) ≤ budget X GiB (config)\n- **Trace determinism** : collisions répétées → même `trace_hash`\n\n## Campagnes\n1) **Rush 1k joueurs / 10 min** : spawn, move, small fights, 5% TCG\n2) **Clone storm** : 10% split clones (cap=4), mesurer Overload\n3) **Edge kite** : 100 joueurs oscillent en bord CF\n4) **Po",
      "size": 708
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/README_INDEX.md",
      "path": "___LATEST ENGINE SPECS - 0826/README_INDEX.md",
      "type": "md",
      "tags": [
        "#editor",
        "#dev",
        "#api"
      ],
      "content": "# README_INDEX.md\n\n# Heroes of Time — Pack complet des documents\n\nCe pack contient tous les documents en Markdown, prêts à être ouverts dans Cursor ou un éditeur texte.\n\n## Sommaire (fichiers dans le même dossier)\n- 00_QA_initiales.md\n- 01_bases_concepts.md\n- 02_regles_moteur.md\n- 03_ombre_brouillard.md\n- 04_systemes_resolution.md\n- 05_identite_energie_complexe.md\n- 06_interferences_gameplay.md\n- 07_objets_pouvoirs.md\n- 08_scenarios_cas_limites.md\n- 09_chasse_temporelle_J25.md\n- 10_schemas_ascii",
      "size": 1112
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/README.md",
      "path": "___LATEST ENGINE SPECS - 0826/README.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — README de navigation (gros index)\n\nBienvenue ! Ce README sert de **table des matières intelligente** pour naviguer rapidement dans tous les fichiers du pack.\nIl propose : un **parcours conseillé**, des **sections par rôle**, une **carte des fichiers**, et des **liens directs** vers les ZIP.\n\n---\n\n## 🧭 Parcours conseillé (20–30 min)\n\n1. **Pitch & bases** → [01_bases_concepts.md](01_bases_concepts.md)\n2. **Règles moteur** → [02_regles_moteur.md](02_regles_moteur.md)\n3. **Ombre p",
      "size": 9248
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/15_conclusion_meta.md",
      "path": "___LATEST ENGINE SPECS - 0826/15_conclusion_meta.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Conclusion méta\n\n> “Ce jeu n’aurait pas pu exister sans l’intelligence augmentée.”\n\nHeroes of Time formalise un paradoxe joyeux : on joue avec le temps pour redonner du relief au présent.  \nA structure : **A** organise le faire, **Φ** orchestre le possible, **|ψ⟩** relie nos tentatives.  \nL’équilibre est vivant : il **émerge** des interactions, se **répare** par la régulation, et se **réinvente** à chaque partie.\n",
      "size": 436
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/18_ascii_brouillard_psi.md",
      "path": "___LATEST ENGINE SPECS - 0826/18_ascii_brouillard_psi.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# ASCII — brouillard & propagation Ψ\n\n```\nCF: █ inconnu, ▒ semi, . clair\nΨ:  ● main, ○ clone\n\ny\n8 | █ █ █ ▒ ▒ ▒\n7 | █ ● → → . .\n6 | █   ○ → . .\n    +----------→ x\n```\n",
      "size": 167
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/27_wtf_is_this_game_dialogue.md",
      "path": "___LATEST ENGINE SPECS - 0826/27_wtf_is_this_game_dialogue.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# 27 — “WTF is this game?” — A dialogue\n*(in English — featuring The Dude, Walter, and Jesus trying to grok the design)*\n\n> **Context:** They’ve just been shown a build of *Heroes of Time* and a napkin with equations like `E = A + iΦ`, `|ψ⟩`, and “causal fog”. Bowling shoes still on. Coffee refills unlimited.\n\n---\n\n**The Dude:** So… it’s not turn-based, but it *kinda* is, but, like, sideways?\n\n**Walter:** It’s simple, Dude. Server time’s the league schedule — **`t_w`** — authoritative. Your own ",
      "size": 4654
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/20_matrice_resultats_multi.md",
      "path": "___LATEST ENGINE SPECS - 0826/20_matrice_resultats_multi.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Matrice des **résultats attendus** (multi)\n\n| ID | Résolution | Agents | Objets consommés | Logs clés | Notes |\n|---:|---|---|---|---|---|\n| MP-01 | TCG 2v1 ou collapse | V possible | Sabliers, Briseur | `meet.delta_te`, `|I|`, `resolution.kind` | Pinch déterministe |\n| MP-02 | Ordre déterministe | — | — | `arbiter.order`, `trace_hash` | Pas de double-résolution |\n| MP-03 | Collapse mineur | V partiel | Miroir | `stealth.reveal_win`, `corridor.open` | Kingmaking limité |\n| MP-",
      "size": 1956
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/12_doc_front.md",
      "path": "___LATEST ENGINE SPECS - 0826/12_doc_front.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Documentation Front-End\n\n## États à afficher\n- Jour caché, `A`, `Φ`, `t_e`/`t_w` (indicateur lisible, pas technique).\n- Ombre portée & brouillard (zones visualisées).\n- Clones & qualité (`|I|` → icônes strong/mid/weak/off).\n\n## Événements UI\n- Apparition/rencontre clones (animation de convergence).\n- Déclenchement combat (TCG / auto / collapse).\n- Intervention régulateurs (icônes Anna/Vince/Overload).\n\n## Règles UX\n- **Lisibilité > réalisme** : animations courtes, feedback imm",
      "size": 832
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/13_doc_back.md",
      "path": "___LATEST ENGINE SPECS - 0826/13_doc_back.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Documentation Back-End\n\n## À implémenter/vérifier\n- Dérive passive, passage de jour caché, dette d’énergie.\n- Calcul OPC & CF ; perçage par Vince ; compression par Anna.\n- Identité `|ψ⟩`, énergie `E=A+iΦ`, interférence `I` et seuils.\n- Déclencheur de résolution : collapse vs TCG vs auto (règles).\n- AFK→IA (60s) & niveaux IA (cap 3).\n- Régulateurs : conditions, priorités, actions.\n\n## APIs (pseudo)\n```\nsplit_coherence(psi_id, rho) -> (psi_main, psi_clone)\nconsume(A_cost, Phi_co",
      "size": 681
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/12_doc_front_.md",
      "path": "___LATEST ENGINE SPECS - 0826/12_doc_front_.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Documentation Front-End\n\n## États à afficher\n- Jour caché, `A`, `Φ`, `t_e`/`t_w` (indicateur lisible, pas technique).\n- Ombre portée & brouillard (zones visualisées).\n- Clones & qualité (`|I|` → icônes strong/mid/weak/off).\n\n## Événements UI\n- Apparition/rencontre clones (animation de convergence).\n- Déclenchement combat (TCG / auto / collapse).\n- Intervention régulateurs (icônes Anna/Vince/Overload).\n\n## Règles UX\n- **Lisibilité > réalisme** : animations courtes, feedback imm",
      "size": 555
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/21_diagrammes_spatio_temporels_multi.md",
      "path": "___LATEST ENGINE SPECS - 0826/21_diagrammes_spatio_temporels_multi.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Diagrammes spatio‑temporels **multijoueur**\n\n## A) Pinch 2v1 (MP-01)\n```\nTemps ↑\nW        Ouest                 Est\nJ2 ●───────────┐\n               X (Terra J3)\nJ2○ (clone) ───┘\nJ1 ●────────────────→\n```\n\n## B) Sandwich temporel (MP-02)\n```\nTemps ↑\n       J2 (passé) ○──→ X\n       J1 (présent) ●──→ X\n       J1' (futur)  ○──→ X\n           (ordre : arbiter)\n```\n\n## C) Surcharge en mêlée (MP-09)\n```\nTemps ↑\nNode R:\n● ○ ● ○ ● ○  (stack=6) → O → collapse → canonique: ●\n```\n\n## D) Co",
      "size": 765
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/25_etat_monde_graphe_orchestration.md",
      "path": "___LATEST ENGINE SPECS - 0826/25_etat_monde_graphe_orchestration.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#6D"
      ],
      "content": "# Heroes of Time — **État du monde** comme **graphe orchestré**\n*(explication mathématique, algo-rythmique, schémas ASCII & coupes dimensionnelles)*\n\n> But : décrire **formellement** le monde du jeu comme un **graphe** évoluant dans le temps,\n> la manière dont l’**orchestrateur** applique les intentions/événements, et les **invariants**\n> qui garantissent cohérence et performance — avec **schémas ASCII** et **coupes** (espace/temps/identité).\n\n---\n\n## 1) Modèle mathématique\n\n### 1.1 Monde comme ",
      "size": 9220
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/README_.md",
      "path": "___LATEST ENGINE SPECS - 0826/README_.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — README de navigation (gros index)\n\nBienvenue ! Ce README sert de **table des matières intelligente** pour naviguer rapidement dans tous les fichiers du pack.\nIl propose : un **parcours conseillé**, des **sections par rôle**, une **carte des fichiers**, et des **liens directs** vers les ZIP.\n\n---\n\n## 🧭 Parcours conseillé (20–30 min)\n\n1. **Pitch & bases** → [01_bases_concepts.md](01_bases_concepts.md)\n2. **Règles moteur** → [02_regles_moteur.md](02_regles_moteur.md)\n3. **Ombre p",
      "size": 9248
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/02_regles_moteur.md",
      "path": "___LATEST ENGINE SPECS - 0826/02_regles_moteur.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Règles moteur (serveur)\n\n## Horloges & énergie\n- `t_w` (monde) : tick fixe (ex. 50 ms).\n- `t_e` (entité) : avance par coûts A et par dérive passive.\n- Passage de jour caché : `A==0` ⇒ `day_hidden += 1`.\n\n## Dérive & stabilisation\n- Dérive passive anti-tortue (faible, paramétrable).\n- Pouvoir **stabilisation** : peut geler la dérive mais augmente la pression des régulateurs et la décohérence (Φ↓).\n\n## Dette d’énergie\n- Pas de `A<0` : on stocke `Debt_A`.\n- Effets : coût majoré, ",
      "size": 1009
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/06_interferences_gameplay.md",
      "path": "___LATEST ENGINE SPECS - 0826/06_interferences_gameplay.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Interférences → Gameplay\n\n## Calcul d’interférence\n`I = ⟨ψ_a | ψ_b⟩ · exp(i(Φ_a - Φ_b))` ; on utilise `|I|` pour la qualité.\n\n## Seuils (exemple à calibrer)\n- `|I| ≥ 0.75` → **Clone complet** : carte TCG pleine, double contrôle/AI élite, buff de synergie.\n- `0.50 ≤ |I| < 0.75` → **Clone affaibli** : carte jouable mais stats réduites / pouvoirs limités.\n- `0.25 ≤ |I| < 0.50` → **Pas de carte** : **buff temporaire** (vitesse/dégâts/vision) puis dissipation.\n- `< 0.25` → **Dissip",
      "size": 736
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/28_final_words.md",
      "path": "___LATEST ENGINE SPECS - 0826/28_final_words.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# 28 — Final Words (North Star)\n\n**Pace is a resource.** Time isn’t a clock; it’s something you *spend*. That’s the game’s identity.\n\n**See ≠ be.** What you *could* do (ombre portée) and what you *know* (brouillard) are different levers. Keep them separate; balance them together.\n\n**Identity is budgeted, not duplicated.** Clones don’t multiply power; they partition it. Interference decides who gets to be “real.”\n\n**Determinism before drama.** Collapse, arbiter, trace hash—make the timeline repla",
      "size": 1178
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/31_sim_preview.json",
      "path": "___LATEST ENGINE SPECS - 0826/31_sim_preview.json",
      "type": "json",
      "tags": [
        "#dev"
      ],
      "content": "{\n  \"AFK_first_5\": [\n    {\n      \"min\": 1,\n      \"A\": 50.08,\n      \"Phi\": 0.8,\n      \"OPC_brut_r\": 50.08,\n      \"OPC_core_r\": 48.08,\n      \"hash\": \"cb175cceca2e\",\n      \"windows_open_ratio\": 1.0\n    },\n    {\n      \"min\": 2,\n      \"A\": 50.17,\n      \"Phi\": 0.8,\n      \"OPC_brut_r\": 50.17,\n      \"OPC_core_r\": 48.16,\n      \"hash\": \"ccb68185f071\",\n      \"windows_open_ratio\": 1.0\n    },\n    {\n      \"min\": 3,\n      \"A\": 50.25,\n      \"Phi\": 0.8,\n      \"OPC_brut_r\": 50.25,\n      \"OPC_core_r\": 48.23,\n     ",
      "size": 3418
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/29_comprehension_finale.md",
      "path": "___LATEST ENGINE SPECS - 0826/29_comprehension_finale.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api",
        "#ui"
      ],
      "content": "# 29 — Compréhension finale (Spec “Multiplayer Officiel”)\n\n> **But** — Fig­er la vision commune : temps différencié avec **drift léger par défaut**, drift **variable** selon mécaniques/objets/map, couches **OPC** (brut/qualité/effectif), **CF** (perception), énergie **E = A + iΦ**, clones/interférences, **régulateurs**, 3 modes de résolution.  \n> **Philosophie** — *Pace is a resource.* On orchestre le **tempo**, pas des tours figés.\n\n---\n\n## 1) Modèle de temps & drift (final)\n- **`t_w`** (monde,",
      "size": 8945
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/26_topologie_ontologie_vs_theorie_du_tout.md",
      "path": "___LATEST ENGINE SPECS - 0826/26_topologie_ontologie_vs_theorie_du_tout.md",
      "type": "md",
      "tags": [
        "#dev",
        "#6D",
        "#api",
        "#temporal",
        "#lore"
      ],
      "content": "# (26) Topologie & Ontologie du moteur vs. une « théorie du tout » (jeu)\n\n**Auteur·rice in‑game :** *Smallinly, Archiviste Itinérant·e du Temps*  \n**Portée :** document d’**exposition sérieuse** (raisonnée, falsifiable) — avec **clins d’œil diegétiques**.  \n**Avertissement d’humilité :** nous **n’identifions pas** notre modèle de jeu à une théorie physique réelle. Nous proposons une **correspondance structurée** (analogie) pour guider conceptuellement la conception, les tests et l’optimisation.\n",
      "size": 11169
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/03_ombre_brouillard.md",
      "path": "___LATEST ENGINE SPECS - 0826/03_ombre_brouillard.md",
      "type": "md",
      "tags": [
        "#temporal",
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Ombre portée & Brouillard\n\n## Ombre portée causale (OPC)\n- Potentiel d’atteinte si on exploite immédiatement vitesse + objets + chemins.\n- Se **réduit** si on laisse filer le temps (dérive) sans agir. ATTENTION FAUX MAIS PAS COMPLETEMENT VOIR DRIFT PARAMETRABLE LOGIQUEMENT La **Zone Casuale Ombre augment avec la ***possibilite*** que le joueur immobile soit au jour n** voir reste du document et extreme a la marge scnenari\n\n## Brouillard de causalité (CF)\n- Incertitude perçue p",
      "size": 746
    },
    {
      "id": "___LATEST ENGINE SPECS - 0826/05_identite_energie_complexe.md",
      "path": "___LATEST ENGINE SPECS - 0826/05_identite_energie_complexe.md",
      "type": "md",
      "tags": [
        "#dev",
        "#api"
      ],
      "content": "# Heroes of Time — Identité Ψ & Énergie complexe\n\n## Définition\n- **Énergie complexe** `E = A + iΦ`\n  - **A** (réel) : PA/mouvements.\n  - **Φ** (imaginaire) : phase/cohérence temporelle (clones, fusion, interférences).\n\n## Identité\n- `|ψ⟩` normalisé ; conservation : `Σ |ψ_k|^2 = 1` sur main+clones.\n- Clonage : split cohérence `ρ` → `|ψ_main|^2=(1-ρ)`, `|ψ_clone|^2=ρ` + coût de phase.\n\n## Décorrélation\n- Décroissance naturelle de Φ (taux `λ`), accélérée par bruit (villes, portails, combats).\n\n## ",
      "size": 635
    }
  ],
  "total": 165
}