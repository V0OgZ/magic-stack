{
  "project_name": "Heroes of Time - Temporal Engine",
  "version": "POC Alpha V0.1",
  "project_type": "Quantum Temporal Strategy Game Engine",
  "last_update": "2025-07-24T16:55:00Z",
  "v2_documentation_rule": {
    "convention": "Suffixer _V2 pour tous les docs r√©cents (moins de 4h)",
    "exemple": "RAPPORT_JEAN.md ‚Üí RAPPORT_JEAN_V2.md",
    "objectif": "Organisation claire versions r√©centes vs anciennes",
    "mise_a_jour": "Tatouages Memento apr√®s chaque renommage V2"
  },
  "core_concepts": [
    "Jeu de strat√©gie temporelle quantique",
    "Timeline locale par joueur avec branches multiples",
    "Superpositions quantiques (œà-states) avec collapse automatique",
    "Artefacts temporels avec effets spatio-temporels",
    "Batailles fant√¥mes pour r√©solution de conflits causaux",
    "Script-first gameplay avec langage temporel complet",
    "Moteur 5D (x,y,z,timeline,temporalLayer)",
    "Syst√®me hexagonal pour la carte"
  ],
  "temporal_grammar": {
    "symbols": {
      "‚äô": "Action en superposition temporelle",
      "‚Ä†": "√âtat effondr√© (collapse)",
      "œà": "Instance d'un √©tat superpos√©",
      "Œ†": "Observation externe (d√©clencheur de collapse)",
      "Œît": "D√©lai temporel (ex: Œît+2 = dans 2 tours)",
      "@": "Coordonn√©es spatiales (@x,y)",
      "‚Ñ¨": "Branche temporelle (multivers ‚Ñ¨1, ‚Ñ¨2, etc.)",
      "‚ü∂": "Projection d'effet ou d'action",
      "‚®â": "Conflit de timeline",
      "‚Ü∫": "Rollback potentiel",
      "œÑ": "Marqueur temporel relatif"
    },
    "syntax_examples": [
      "œà001: ‚äô(Œît+2 @126,65 ‚ü∂ CREATE(CREATURE, Dragon))",
      "Œ†(Player2 enters @126,65) ‚áí ‚Ä†œà001",
      "‚Ä†œà001",
      "USE(ITEM, AvantWorldBlade, HERO:Arthur)"
    ]
  },
  "active_artifacts": [
    {
      "id": "avantworld_blade",
      "name": "Lame de l'Avant-Monde",
      "rarity": "Paradoxe",
      "effect": "Bataille fant√¥me future"
    },
    {
      "id": "reverse_clock",
      "name": "Horloge du Dernier Instant",
      "rarity": "L√©gendaire",
      "effect": "Rollback 1-3 tours"
    },
    {
      "id": "ignorance_beacon",
      "name": "Balise d'Ignorance Temporelle",
      "rarity": "L√©gendaire",
      "effect": "Ignore entit√©s faibles"
    },
    {
      "id": "anchor_tower",
      "name": "Tour de l'Ancrage",
      "rarity": "L√©gendaire",
      "effect": "G√®le zone temporelle"
    },
    {
      "id": "temporal_echo",
      "name": "√âcho Temporel",
      "rarity": "√âpique",
      "effect": "R√©p√®te la derni√®re action dans le futur"
    }
  ],
  "technical_stack": {
    "backend": {
      "framework": "Spring Boot 3.2.0",
      "java_version": "17+",
      "database": "H2 in-memory",
      "build_tool": "Maven 3.8+",
      "port": 8080
    },
    "frontend": {
      "status": "√Ä d√©velopper",
      "technology": "React/Electron sugg√©r√©",
      "port": 3000
    }
  },
  "implemented_features": {
    "backend": [
      "Moteur temporel quantique complet",
      "Parser de scripts temporels avec regex",
      "Syst√®me de œà-states avec collapse",
      "Gestion des timelines multiples",
      "Artefacts temporels avec effets",
      "API REST compl√®te",
      "Base de donn√©es H2 avec sch√©ma complet",
      "Syst√®me hexagonal de coordonn√©es",
      "D√©tection et r√©solution des conflits causaux"
    ],
    "testing": [
      "Scripts de test automatis√©s",
      "Donn√©es d'exemple compl√®tes",
      "Tests d'int√©gration API",
      "Validation des m√©caniques temporelles"
    ]
  },
  "current_focus": "Documentation technique COMPL√àTE - Moteur temporel expliqu√© avec exemples et algorithmes",
  "api_endpoints": {
    "games": "/api/games - Gestion des parties",
    "heroes": "/api/heroes - Actions des h√©ros",
    "scripts": "/api/scripts - Ex√©cution des scripts temporels",
    "temporal": "/api/temporal - Op√©rations temporelles",
    "tiles": "/api/tiles - Gestion de la carte",
    "timelines": "/api/timelines - Gestion des branches temporelles"
  },
  "script_commands": {
    "basic": [
      "HERO()",
      "MOV()",
      "CREATE()",
      "USE()",
      "BATTLE()"
    ],
    "temporal": [
      "œà:",
      "‚äô()",
      "‚Ä†œà",
      "Œ†()",
      "Œît+n",
      "@x,y"
    ],
    "advanced": [
      "‚Ñ¨n",
      "‚ü∂",
      "‚®â",
      "‚Ü∫",
      "œÑ"
    ]
  },
  "files_structure": {
    "root": [
      "README.md - Documentation principale",
      "RESUME_POC_HEROES_OF_TIME.md - R√©sum√© complet",
      "TEMPORAL_ARTIFACTS.json - Artefacts d√©finis",
      "GRAMMAIRE_SPATIO_TEMPORELLE.md - Syntaxe compl√®te",
      "sample_data.json - Donn√©es de test",
      "cursor.rules - Ce fichier de contexte"
    ],
    "backend": [
      "src/main/java/com/heroesoftimepoc/temporalengine/",
      "model/ - Entit√©s JPA",
      "service/ - Logique m√©tier",
      "controller/ - API REST",
      "repository/ - Acc√®s donn√©es"
    ]
  },
  "history": [
    {
      "timestamp": "2025-01-21T08:00:00Z",
      "change": "Cr√©ation du POC complet avec moteur temporel"
    },
    {
      "timestamp": "2025-01-21T09:00:00Z",
      "change": "Impl√©mentation des artefacts temporels"
    },
    {
      "timestamp": "2025-01-21T09:30:00Z",
      "change": "Parser de scripts temporels avec regex complet"
    },
    {
      "timestamp": "2025-01-21T10:00:00Z",
      "change": "Syst√®me de persistance intelligent cr√©√©"
    },
    {
      "timestamp": "2025-07-17T12:27:02Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T12:27:02Z",
      "change": "Syst√®me de persistance Cursor install√© et test√©"
    },
    {
      "timestamp": "2025-07-17T12:27:07Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T12:27:07Z",
      "change": "Ajout artefact: √âcho Temporel"
    },
    {
      "timestamp": "2025-07-17T12:27:12Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T12:28:20Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T12:28:25Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T12:28:25Z",
      "change": "Syst√®me de persistance Cursor COMPLET - Fichiers cr√©√©s, test√©s et op√©rationnels"
    },
    {
      "timestamp": "2025-07-17T12:29:02Z",
      "change": "Documentation mise √† jour: Create intelligent Cursor persistence system for Heroes of Time project"
    },
    {
      "timestamp": "2025-07-17T12:33:50Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T12:34:34Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T12:35:06Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T12:35:48Z",
      "change": "Commit: üß† Syst√®me de persistance Cursor COMPLET - Contexte intelligent permanent pour Heroes of Time"
    },
    {
      "timestamp": "2025-07-17T12:35:59Z",
      "change": "Syst√®me de persistance Cursor pouss√© vers GitHub - Sauvegarde compl√®te"
    },
    {
      "timestamp": "2025-07-17T12:36:24Z",
      "change": "Commit: Update Cursor persistence system and project metadata timestamps"
    },
    {
      "timestamp": "2025-07-17T12:37:46Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T12:42:09Z",
      "change": "Scripts de simulation de partie cr√©√©s - simulate-game.sh, simulate-quick.sh, simulate-performance.sh"
    },
    {
      "timestamp": "2025-07-17T12:43:23Z",
      "change": "Documentation mise √† jour: üéÆ Scripts de Simulation de Partie COMPLETS - Heroes of Time"
    },
    {
      "timestamp": "2025-07-17T12:44:13Z",
      "change": "Commit: Update simulation scripts and documentation for Heroes of Time"
    },
    {
      "timestamp": "2025-07-17T12:45:56Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T12:49:53Z",
      "change": "Tests r√©ussis - Rapport g√©n√©r√© - Plan frontend simple cr√©√©"
    },
    {
      "timestamp": "2025-07-17T12:50:18Z",
      "change": "Documentation mise √† jour: üß™ TESTS VALID√âS + RAPPORT + PLAN FRONTEND - Heroes of Time"
    },
    {
      "timestamp": "2025-07-17T12:51:13Z",
      "change": "Commit: Update project documentation with latest test and frontend plan details"
    },
    {
      "timestamp": "2025-07-17T13:00:57Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:07:54Z",
      "change": "Frontend minimaliste HTML/JS vanilla COMPLET - Interface op√©rationnelle"
    },
    {
      "timestamp": "2025-07-17T13:09:17Z",
      "change": "Documentation mise √† jour: üñ•Ô∏è FRONTEND MINIMALISTE COMPLET - Interface HTML/JS vanilla pr√™te √† l'emploi"
    },
    {
      "timestamp": "2025-07-17T13:10:33Z",
      "change": "Documentation mise √† jour: Add frontend implementation summary and update project metadata"
    },
    {
      "timestamp": "2025-07-17T13:11:22Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:11:50Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:14:28Z",
      "change": "Documentation mise √† jour: üìö EXPLICATION MOTEUR TEMPOREL COMPL√àTE - Documentation technique pour d√©veloppeurs"
    },
    {
      "timestamp": "2025-07-17T13:14:40Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:18:41Z",
      "change": "Documentation mise √† jour: üîß R√âPONSE TECHNIQUE COMPL√àTE - Validation moteur temporel Heroes of Time"
    },
    {
      "timestamp": "2025-07-17T13:18:56Z",
      "change": "Commit: Update project documentation and timestamp for Heroes of Time engine"
    },
    {
      "timestamp": "2025-07-17T13:21:19Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:25:20Z",
      "change": "Documentation mise √† jour: üé® √âDITEUR VISUEL SCRIPT SPATIO-TEMPOREL - Sp√©cification compl√®te"
    },
    {
      "timestamp": "2025-07-17T13:25:40Z",
      "change": "Commit: Update project metadata with latest timestamp and documentation note"
    },
    {
      "timestamp": "2025-07-17T13:30:00Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:37:00Z",
      "change": "Documentation mise √† jour: ‚úÖ V√âRIFICATION MOTEUR TEMPOREL COMPL√àTE - Documentation technique exhaustive"
    },
    {
      "timestamp": "2025-07-17T13:37:21Z",
      "change": "Commit: Update project documentation and timestamp for temporal engine checkpoint"
    },
    {
      "timestamp": "2025-07-17T13:40:51Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:42:03Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:45:52Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:53:13Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T13:53:13Z",
      "change": "Modifications Java: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T13:57:03Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T13:57:03Z",
      "change": "Modifications Java: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T14:08:10Z",
      "change": "Modifications du code Java d√©tect√©es"
    },
    {
      "timestamp": "2025-07-17T14:08:10Z",
      "change": "Modifications Java: Add temporal engine documentation and test scripts for POC"
    },
    {
      "timestamp": "2025-07-17T16:02:15Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T16:03:23Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T16:20:05Z",
      "change": "Documentation mise √† jour: ‚úÖ Temporal Engine Complete - 89% Project Status"
    },
    {
      "timestamp": "2025-07-17T16:20:39Z",
      "change": "Commit: Update project documentation with latest timestamp and status"
    },
    {
      "timestamp": "2025-07-17T16:23:18Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T16:25:17Z",
      "change": "Commit: Add new classes for artifact and conflict zone models in temporal engine"
    },
    {
      "timestamp": "2025-07-17T16:32:52Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T16:35:03Z",
      "change": "Commit: üîß Minor updates and cleanup after status review"
    },
    {
      "timestamp": "2025-07-17T16:40:01Z",
      "change": "Documentation mise √† jour: üéÆ Frontend Interface Complete - 91% Project Status"
    },
    {
      "timestamp": "2025-07-17T19:18:00Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:20:28Z",
      "change": "Commit: Update project metadata and changelog timestamp"
    },
    {
      "timestamp": "2025-07-17T19:21:04Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:21:51Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:22:00Z",
      "change": "Commit: Update project metadata timestamp and changelog entry"
    },
    {
      "timestamp": "2025-07-17T19:22:12Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:53:24Z",
      "change": "Commit: Add simple game interface for easy testing"
    },
    {
      "timestamp": "2025-07-17T19:53:42Z",
      "change": "Commit: Update project metadata with new timestamp and changelog entry"
    },
    {
      "timestamp": "2025-07-17T19:54:05Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:55:04Z",
      "change": "Commit: Update project metadata timestamp and add checkpoint changelog entry"
    },
    {
      "timestamp": "2025-07-17T19:56:46Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T19:58:00Z",
      "change": "Commit: Update project metadata timestamp and add checkpoint changelog entry"
    },
    {
      "timestamp": "2025-07-17T20:01:00Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:02:12Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:05:33Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:05:55Z",
      "change": "Commit: Update project metadata timestamp and add new changelog entry"
    },
    {
      "timestamp": "2025-07-17T20:07:30Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:11:48Z",
      "change": "Commit: Unify UI with animated heroes and integrated demo mode"
    },
    {
      "timestamp": "2025-07-17T20:12:10Z",
      "change": "Commit: Update project metadata and timestamp for UI demo integration"
    },
    {
      "timestamp": "2025-07-17T20:14:07Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:14:19Z",
      "change": "Commit: Update project metadata timestamp for checkpoint"
    },
    {
      "timestamp": "2025-07-17T20:41:41Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:43:24Z",
      "change": "Commit: Update project metadata timestamp for checkpoint"
    },
    {
      "timestamp": "2025-07-17T20:48:17Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:49:01Z",
      "change": "Commit: Update project metadata timestamp for checkpoint"
    },
    {
      "timestamp": "2025-07-17T20:51:37Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:52:22Z",
      "change": "Commit: Update project metadata timestamp for checkpoint"
    },
    {
      "timestamp": "2025-07-17T20:53:52Z",
      "change": "Commit: Checkpoint before follow-up message"
    },
    {
      "timestamp": "2025-07-17T20:54:50Z",
      "change": "Commit: Update project metadata timestamp and add checkpoint log entry"
    }
  ],
  "next_steps": [
    "D√©veloppement de l'interface frontend",
    "Visualisation des timelines et zones temporelles",
    "Tests d'int√©gration avec interface utilisateur",
    "Optimisation des performances du moteur temporel"
  ],
  "important_notes": [
    "Toujours respecter la grammaire spatio-temporelle d√©finie",
    "Les œà-states doivent √™tre g√©r√©s avec pr√©caution (collapse automatique)",
    "Les conflits causaux d√©clenchent des batailles fant√¥mes",
    "Le syst√®me est script-first : tout doit √™tre jouable par scripts",
    "Coordonn√©es hexagonales avec syst√®me de cubes",
    "H2 database auto-initialis√©e avec donn√©es d'exemple"
  ]
}
