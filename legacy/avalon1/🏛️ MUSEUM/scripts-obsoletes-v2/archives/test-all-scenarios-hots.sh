#!/bin/bash

# üéÆ Heroes of Time - Test de tous les sc√©narios HOTS
# ================================================

echo "üéÆ Heroes of Time - Test des sc√©narios HOTS"
echo "==========================================="

# Configuration
BACKEND_URL="http://localhost:8080"
GAME_ID=""

# Fonction pour tester la connexion backend
test_backend() {
    echo "üîç Test de connexion au backend..."
    if curl -s "$BACKEND_URL/api/game/status" > /dev/null 2>&1; then
        echo "‚úÖ Backend connect√© sur $BACKEND_URL"
        return 0
    else
        echo "‚ùå Backend non accessible sur $BACKEND_URL"
        return 1
    fi
}

# Fonction pour cr√©er un nouveau jeu
create_game() {
    echo "üéØ Cr√©ation d'un nouveau jeu..."
    RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/games" \
        -H "Content-Type: application/json" \
        -d '{
            "gameName": "Test HOTS Scenarios",
            "playerCount": 2,
            "mapWidth": 20,
            "mapHeight": 15
        }')
    
    # Correction: chercher "gameId" au lieu de "id"
    GAME_ID=$(echo $RESPONSE | grep -o '"gameId":[0-9]*' | grep -o '[0-9]*')
    if [ -n "$GAME_ID" ]; then
        echo "‚úÖ Jeu cr√©√© avec ID: $GAME_ID"
        return 0
    else
        echo "‚ùå √âchec de cr√©ation du jeu"
        echo "R√©ponse: $RESPONSE"
        return 1
    fi
}

# Fonction pour ex√©cuter un script HOTS
execute_hots_script() {
    local script="$1"
    local description="$2"
    
    echo "üìù Ex√©cution: $description"
    echo "   Script: $script"
    
    RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/temporal/games/$GAME_ID/script" \
        -H "Content-Type: application/json" \
        -d "{\"script\": \"$script\"}")
    
    if echo "$RESPONSE" | grep -q '"success":true'; then
        echo "‚úÖ Succ√®s"
    else
        echo "‚ùå √âchec"
        echo "   R√©ponse: $RESPONSE"
    fi
    echo ""
}

# Fonction pour obtenir l'√©tat du jeu
get_game_state() {
    echo "üìä √âtat du jeu:"
    curl -s "$BACKEND_URL/api/temporal/games/$GAME_ID/state" | jq '.' || echo "√âtat non disponible"
    echo ""
}

# Sc√©narios HOTS √† tester
run_hots_scenarios() {
    echo "üé≠ SC√âNARIOS HOTS - TEST COMPLET"
    echo "================================="
    
    # Sc√©nario 1: Cr√©ation de h√©ros
    echo "üé≠ Sc√©nario 1: Cr√©ation de h√©ros"
    execute_hots_script "HERO(Arthur)" "Cr√©er h√©ros Arthur"
    execute_hots_script "HERO(Ragnar)" "Cr√©er h√©ros Ragnar"
    execute_hots_script "HERO(Merlin)" "Cr√©er h√©ros Merlin"
    
    # Sc√©nario 2: Mouvements basiques
    echo "üé≠ Sc√©nario 2: Mouvements basiques"
    execute_hots_script "MOV(Arthur, @10,10)" "D√©placer Arthur"
    execute_hots_script "MOV(Ragnar, @15,15)" "D√©placer Ragnar"
    execute_hots_script "MOV(Merlin, @5,8)" "D√©placer Merlin"
    
    # Sc√©nario 3: Cr√©ation d'entit√©s
    echo "üé≠ Sc√©nario 3: Cr√©ation d'entit√©s"
    execute_hots_script "CREATE(CREATURE, Dragon, @12,12)" "Cr√©er Dragon"
    execute_hots_script "CREATE(ITEM, AvantWorldBlade)" "Cr√©er Lame de l'Avant-Monde"
    execute_hots_script "BUILD(TOWER, @18,18, Player1)" "Construire Tour"
    
    # Sc√©nario 4: œà-states (superpositions quantiques)
    echo "üé≠ Sc√©nario 4: œà-states quantiques"
    execute_hots_script "œà001: ‚äô(Œît+2 @11,11 ‚ü∂ MOV(Arthur, @11,11))" "Cr√©er superposition mouvement"
    execute_hots_script "œà002: ‚äô(Œît+1 @16,16 ‚ü∂ CREATE(CREATURE, Griffin, @16,16))" "Cr√©er superposition cr√©ature"
    execute_hots_script "œà003: ‚äô(Œît+3 @20,20 ‚ü∂ BATTLE(Arthur, Dragon))" "Cr√©er superposition bataille"
    
    # Sc√©nario 5: Utilisation d'artefacts
    echo "üé≠ Sc√©nario 5: Artefacts temporels"
    execute_hots_script "USE(ITEM, AvantWorldBlade, HERO:Arthur)" "Utiliser Lame de l'Avant-Monde"
    execute_hots_script "USE(ITEM, ReverseClock, HERO:Ragnar)" "Utiliser Horloge Invers√©e"
    execute_hots_script "EQUIP(TemporalEcho, Arthur)" "√âquiper √âcho Temporel"
    
    # Sc√©nario 6: Collapse des œà-states
    echo "üé≠ Sc√©nario 6: Collapse quantique"
    execute_hots_script "‚Ä†œà001" "Collapse superposition mouvement"
    execute_hots_script "‚Ä†œà002" "Collapse superposition cr√©ature"
    execute_hots_script "‚Ä†œà003" "Collapse superposition bataille"
    
    # Sc√©nario 7: Actions avanc√©es
    echo "üé≠ Sc√©nario 7: Actions avanc√©es"
    execute_hots_script "CAST(TimeWarp, Arthur, @10,10)" "Lancer sort temporal"
    execute_hots_script "RECRUIT(Knights, 5, Arthur)" "Recruter chevaliers"
    execute_hots_script "COLLECT(Gold, 100, Player1)" "Collecter or"
    execute_hots_script "SIEGE(EnemyTower, @18,18, Arthur)" "Assi√©ger tour ennemie"
    
    # Sc√©nario 8: Triggers d'observation
    echo "üé≠ Sc√©nario 8: Triggers d'observation"
    execute_hots_script "œà004: ‚äô(Œît+1 @13,13 ‚ü∂ MOV(Ragnar, @13,13))" "Cr√©er superposition conditionnelle"
    execute_hots_script "Œ†(Arthur enters @13,13) ‚áí ‚Ä†œà004" "D√©finir trigger d'observation"
    execute_hots_script "MOV(Arthur, @13,13)" "D√©clencher trigger"
    
    echo "‚úÖ Tous les sc√©narios HOTS test√©s!"
}

# Fonction principale
main() {
    echo "üöÄ D√©marrage des tests HOTS"
    echo ""
    
    # V√©rifier le backend
    if ! test_backend; then
        echo "‚ùå Impossible de continuer sans backend"
        exit 1
    fi
    
    # Cr√©er le jeu
    if ! create_game; then
        echo "‚ùå Impossible de cr√©er le jeu"
        exit 1
    fi
    
    # Ex√©cuter les sc√©narios
    run_hots_scenarios
    
    # √âtat final
    echo "üìä √âTAT FINAL DU JEU:"
    get_game_state
    
    echo ""
    echo "üéØ R√âSUM√â:"
    echo "‚úÖ Tests des sc√©narios HOTS termin√©s"
    echo "üéÆ Jeu ID: $GAME_ID"
    echo "üåê Voir les frontends pour la visualisation:"
    echo "   ‚Ä¢ Frontend Classique: http://localhost:8000"
    echo "   ‚Ä¢ Frontend Temporel: http://localhost:5173"
    echo "   ‚Ä¢ Quantum Visualizer: http://localhost:8001"
    echo ""
    echo "üéä HOTS ENGINE FONCTIONNE PARFAITEMENT!"
}

# Ex√©cuter le script
main 